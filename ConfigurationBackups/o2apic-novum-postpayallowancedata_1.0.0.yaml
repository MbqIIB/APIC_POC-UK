swagger: "2.0"
info:
  title: o2apic-novum-postpayallowancedata
  x-ibm-name: o2apic-novum-postpayallowancedata
  version: 1.0.0
host: $(catalog.host)
schemes:
- https
basePath: /apic
produces:
- application/json
consumes:
- application/json
security:
- clientIdHeader: []
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
x-ibm-configuration:
  phase: realized
  testable: true
  enforced: true
  properties:
    target-url:
      value: http://example.com/operation-name
      description: The URL of the target service
      encoded: false
    auth-400:
      value: Something's wrong. Please try again later.
      description: Something's wrong. Please try again later.
    auth-401:
      value: That PIN isn't the one you've used before. Please try again or change
        your PIN.
      description: That PIN isn't the one you've used before. Please try again or
        change your PIN.
    auth-500:
      value: Something's wrong. Please try again later.
      description: Something's wrong. Please try again later.
    auth-404:
      value: Something's wrong. Please try again later.
      description: Something's wrong. Please try again later.
    other-backend-error:
      value: Something's wrong. Please try again later.
      description: Something's wrong. Please try again later.
    phoneservice-500:
      value: Something's wrong. Please try again later.
      description: Something's wrong. Please try again later.
    phoneservice-503:
      value: The server is busy. Please try again after some time.
      description: The server is busy. Please try again after some time.
    phoneservice-404:
      value: No billing data found for MSISDN.
      description: No billing data found for MSISDN.
    Int_Server_Err:
      value: Something's wrong. Please try again later.
      description: Something's wrong. Please try again later.
    ServiceTimeout:
      value: Something's wrong. Please try again later.
      description: Something's wrong. Please try again later.
    SubscriberNotRecognized:
      value: Unable to locate account details.
      description: Unable to locate account details.
    SubscriberNotActive:
      value: The account is no longer active.
      description: The account is no longer active.
    AccountDisconnected:
      value: The account is disconnected or cannot be found.
      description: The account is disconnected or cannot be found.
    NetworkInvalid:
      value: The account is not on a valid network.
      description: The account is not on a valid network.
    AccountNotSetup:
      value: The account is not yet fully set up.
      description: The account is not yet fully set up.
    InvalidPostpay:
      value: Unable to identify whether the mobile number is valid.
      description: Unable to identify whether the mobile number is valid.
    bad-request:
      value: Something's wrong. Please try again later.
      description: Something's wrong. Please try again later.
  catalogs: {}
  cors:
    enabled: true
  application-authentication:
    certificate: false
  targets:
    ViewAllowanceService:
      swagger: "2.0"
      info:
        title: ViewAllowanceService
        description: ""
        x-ibm-name: viewallowanceservice
        version: 1.0.0
      schemes:
      - https
      basePath: /ViewAllowanceService
      produces:
      - application/xml
      consumes:
      - text/xml
      securityDefinitions:
        clientID:
          type: apiKey
          name: X-IBM-Client-Id
          in: header
          description: ""
      security:
      - clientID: []
      x-ibm-configuration:
        type: wsdl
        wsdl-definition:
          wsdl: 5ae329e30cf28f24d48cc986
          service: ViewAllowanceService
          port: ViewAllowancePort
          soap-version: "1.1"
        assembly:
          execute:
          - proxy:
              title: proxy
              target-url: https://sdpapi.o2.co.uk/services/ViewAllowance_2_0
        gateway: datapower-gateway
        enforced: true
        testable: true
        phase: realized
        cors:
          enabled: true
      paths:
        /getAllowance:
          post:
            summary: Operation getAllowance
            description: ""
            operationId: getAllowance
            x-ibm-soap:
              soap-action: ""
              soap-operation: '{http://soa.o2.co.uk/viewallowancedata_2}getAllowance'
            parameters:
            - in: body
              name: body
              required: true
              schema:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowanceInput'
            responses:
              "500":
                description: ""
                schema:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowanceFault'
              default:
                description: ""
                schema:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowanceOutput'
        /getDataAllowance_1:
          post:
            summary: Operation getDataAllowance_1
            description: ""
            operationId: getDataAllowance_1
            x-ibm-soap:
              soap-action: ""
              soap-operation: '{http://soa.o2.co.uk/viewallowancedata_2}getDataAllowance_1'
            parameters:
            - in: body
              name: body
              required: true
              schema:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getDataAllowance_1Input'
            responses:
              "500":
                description: ""
                schema:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getDataAllowance_1Fault'
              default:
                description: ""
                schema:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getDataAllowance_1Output'
        /getNonDataAllowance_1:
          post:
            summary: Operation getNonDataAllowance_1
            description: ""
            operationId: getNonDataAllowance_1
            x-ibm-soap:
              soap-action: ""
              soap-operation: '{http://soa.o2.co.uk/viewallowancedata_2}getNonDataAllowance_1'
            parameters:
            - in: body
              name: body
              required: true
              schema:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_1Input'
            responses:
              "500":
                description: ""
                schema:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_1Fault'
              default:
                description: ""
                schema:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_1Output'
        /getAllowance_2:
          post:
            summary: Operation getAllowance_2
            description: ""
            operationId: getAllowance_2
            x-ibm-soap:
              soap-action: ""
              soap-operation: '{http://soa.o2.co.uk/viewallowancedata_2}getAllowance_2'
            parameters:
            - in: body
              name: body
              required: true
              schema:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowance_2Input'
            responses:
              "500":
                description: ""
                schema:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowance_2Fault'
              default:
                description: ""
                schema:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowance_2Output'
        /getNonDataAllowance_2:
          post:
            summary: Operation getNonDataAllowance_2
            description: ""
            operationId: getNonDataAllowance_2
            x-ibm-soap:
              soap-action: ""
              soap-operation: '{http://soa.o2.co.uk/viewallowancedata_2}getNonDataAllowance_2'
            parameters:
            - in: body
              name: body
              required: true
              schema:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_2Input'
            responses:
              "500":
                description: ""
                schema:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_2Fault'
              default:
                description: ""
                schema:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_2Output'
      definitions:
        Security:
          xml:
            namespace: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
            prefix: wsse
          type: object
          properties:
            UsernameToken:
              xml:
                namespace: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
                prefix: wsse
              type: object
              properties:
                Username:
                  xml:
                    namespace: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
                    prefix: wsse
                  type: string
                Password:
                  xml:
                    namespace: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
                    prefix: wsse
                  type: string
                Nonce:
                  xml:
                    namespace: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
                    prefix: wsse
                  type: string
                  properties:
                    EncodingType:
                      xml:
                        namespace: ""
                        attribute: true
                      type: string
                Created:
                  xml:
                    namespace: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
                    prefix: wsu
                  type: string
            Timestamp:
              xml:
                namespace: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
                prefix: wsu
              type: object
              properties:
                Created:
                  xml:
                    namespace: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
                    prefix: wsu
                  type: string
                Expires:
                  xml:
                    namespace: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
                    prefix: wsu
                  type: string
                Id:
                  xml:
                    namespace: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
                    prefix: wsu
                    attribute: true
                  type: string
        getAllowanceInput:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Header:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowanceHeader'
                Body:
                  type: object
                  properties:
                    getAllowance:
                      $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowance_vad'
                  required:
                  - getAllowance
              required:
              - Body
          required:
          - Envelope
          example: |2-

            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Header>
              <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
               <wsse:UsernameToken>
                <wsse:Username>string</wsse:Username>
                <wsse:Password>string</wsse:Password>
                <wsse:Nonce EncodingType="string">string</wsse:Nonce>
                <wsu:Created>string</wsu:Created>
               </wsse:UsernameToken>
               <wsu:Timestamp wsu:Id="string">
                <wsu:Created>string</wsu:Created>
                <wsu:Expires>string</wsu:Expires>
               </wsu:Timestamp>
              </wsse:Security>
             </soapenv:Header>
             <soapenv:Body>
              <vad:getAllowance xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1"><!-- mandatory -->
               <vad:account><!-- mandatory -->
                <ns1:portalID>string</ns1:portalID>
                <ns1:msisdn>string</ns1:msisdn>
                <ns1:accountDetail>
                 <ns1:billingAccountType><!-- mandatory -->string</ns1:billingAccountType>
                 <ns1:accountNumber><!-- mandatory -->string</ns1:accountNumber>
                 <ns1:msisdn><!-- mandatory -->string</ns1:msisdn>
                </ns1:accountDetail>
               </vad:account>
               <vad:allowanceCategory><!-- between zero and unlimited repetitions of this element -->string</vad:allowanceCategory>
               <vad:dataSource>string</vad:dataSource>
               <vad:productList>
                <vad:tariffProductId><!-- mandatory -->string</vad:tariffProductId>
                <vad:services>
                 <vad:productId><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->string</vad:productId>
                </vad:services>
               </vad:productList>
               <vad:returnAllowanceByBundleType>string</vad:returnAllowanceByBundleType>
              </vad:getAllowance>
             </soapenv:Body>
            </soapenv:Envelope>
        getAllowanceHeader:
          type: object
          properties:
            Security:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/Security'
        getAllowanceOutput:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Body:
                  type: object
                  properties:
                    getAllowanceResponse:
                      $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowanceResponse_vad'
              required:
              - Body
          required:
          - Envelope
          example: |2-

            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Body>
              <vad:getAllowanceResponse xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2">
               <vad:accountAllowances>
                <vad:accountNumber><!-- mandatory -->string</vad:accountNumber>
                <vad:allowance><!-- between zero and unlimited repetitions of this element -->
                 <vad:productCode>string</vad:productCode>
                 <vad:productName><!-- mandatory -->string</vad:productName>
                 <vad:productType><!-- mandatory -->string</vad:productType>
                 <vad:productDescription>string</vad:productDescription>
                 <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                 <vad:suspended>true</vad:suspended>
                 <vad:allowanceDetail><!-- mandatory -->
                  <vad:allowanceSummary><!-- mandatory -->
                   <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                   <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                   <vad:allowanceRemaining>3</vad:allowanceRemaining>
                  </vad:allowanceSummary>
                  <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                  <vad:restricted>true</vad:restricted>
                 </vad:allowanceDetail>
                 <vad:allowanceText>string</vad:allowanceText>
                </vad:allowance>
               </vad:accountAllowances>
               <vad:msisdnAllowances>
                <vad:msisdn><!-- mandatory -->string</vad:msisdn>
                <vad:voiceAllowances>
                 <vad:totalAllowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:totalAllowanceSummary>
                 <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                  <vad:productCode>string</vad:productCode>
                  <vad:productName><!-- mandatory -->string</vad:productName>
                  <vad:productType><!-- mandatory -->string</vad:productType>
                  <vad:productDescription>string</vad:productDescription>
                  <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                  <vad:suspended>true</vad:suspended>
                  <vad:allowanceDetail><!-- mandatory -->
                   <vad:allowanceSummary><!-- mandatory -->
                    <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                    <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                    <vad:allowanceRemaining>3</vad:allowanceRemaining>
                   </vad:allowanceSummary>
                   <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                   <vad:restricted>true</vad:restricted>
                  </vad:allowanceDetail>
                  <vad:allowanceText>string</vad:allowanceText>
                 </vad:allowance>
                </vad:voiceAllowances>
                <vad:messageAllowances>
                 <vad:totalAllowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:totalAllowanceSummary>
                 <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                  <vad:productCode>string</vad:productCode>
                  <vad:productName><!-- mandatory -->string</vad:productName>
                  <vad:productType><!-- mandatory -->string</vad:productType>
                  <vad:productDescription>string</vad:productDescription>
                  <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                  <vad:suspended>true</vad:suspended>
                  <vad:allowanceDetail><!-- mandatory -->
                   <vad:allowanceSummary><!-- mandatory -->
                    <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                    <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                    <vad:allowanceRemaining>3</vad:allowanceRemaining>
                   </vad:allowanceSummary>
                   <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                   <vad:restricted>true</vad:restricted>
                  </vad:allowanceDetail>
                  <vad:allowanceText>string</vad:allowanceText>
                 </vad:allowance>
                </vad:messageAllowances>
                <vad:dataAllowances>
                 <vad:totalAllowanceSummary><!-- between zero and unlimited repetitions of this element -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                  <vad:dataThresholdType>string</vad:dataThresholdType>
                  <vad:startDate>2016-04-18T14:07:37</vad:startDate>
                  <vad:renewalDate>2016-04-18</vad:renewalDate>
                  <vad:timestamp>2016-04-18T14:07:37</vad:timestamp>
                 </vad:totalAllowanceSummary>
                 <vad:allowance><!-- between zero and unlimited repetitions of this element -->
                  <vad:productCode>string</vad:productCode>
                  <vad:productName><!-- mandatory -->string</vad:productName>
                  <vad:productType><!-- mandatory -->string</vad:productType>
                  <vad:productDescription>string</vad:productDescription>
                  <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                  <vad:suspended>true</vad:suspended>
                  <vad:allowanceDetail><!-- mandatory -->
                   <vad:allowanceSummary><!-- mandatory -->
                    <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                    <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                    <vad:allowanceRemaining>3</vad:allowanceRemaining>
                   </vad:allowanceSummary>
                   <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                   <vad:restricted>true</vad:restricted>
                  </vad:allowanceDetail>
                  <vad:allowanceText>string</vad:allowanceText>
                 </vad:allowance>
                 <vad:dataAllowancesByBundleType>
                  <vad:dataBundle><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                   <vad:bundleType><!-- mandatory -->string</vad:bundleType>
                   <vad:startingAllowance><!-- mandatory -->3</vad:startingAllowance>
                   <vad:allowanceUsed>3</vad:allowanceUsed>
                   <vad:allowanceRemaining>3</vad:allowanceRemaining>
                   <vad:expiryDate>2016-04-18</vad:expiryDate>
                  </vad:dataBundle>
                 </vad:dataAllowancesByBundleType>
                </vad:dataAllowances>
                <vad:unlimitedAllowances>
                 <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                  <vad:productCode>string</vad:productCode>
                  <vad:productName><!-- mandatory -->string</vad:productName>
                  <vad:productType><!-- mandatory -->string</vad:productType>
                  <vad:productDescription>string</vad:productDescription>
                  <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                  <vad:suspended>true</vad:suspended>
                  <vad:allowanceDetail><!-- mandatory -->
                   <vad:allowanceSummary><!-- mandatory -->
                    <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                    <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                    <vad:allowanceRemaining>3</vad:allowanceRemaining>
                   </vad:allowanceSummary>
                   <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                   <vad:restricted>true</vad:restricted>
                  </vad:allowanceDetail>
                  <vad:allowanceText>string</vad:allowanceText>
                 </vad:allowance>
                </vad:unlimitedAllowances>
               </vad:msisdnAllowances>
               <vad:chargingType><!-- between zero and unlimited repetitions of this element -->string</vad:chargingType>
              </vad:getAllowanceResponse>
             </soapenv:Body>
            </soapenv:Envelope>
        getAllowanceFault:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Body:
                  type: object
                  properties:
                    Fault:
                      type: object
                      properties:
                        faultcode:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        faultstring:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        faultactor:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        detail:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: object
                          properties:
                            getAllowanceFault:
                              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowanceFault_val'
              required:
              - Body
          required:
          - Envelope
        getDataAllowance_1Input:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Header:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getDataAllowance_1Header'
                Body:
                  type: object
                  properties:
                    getDataAllowance_1:
                      $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getDataAllowance_1_vad'
                  required:
                  - getDataAllowance_1
              required:
              - Body
          required:
          - Envelope
          example: |2-

            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Header>
              <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
               <wsse:UsernameToken>
                <wsse:Username>string</wsse:Username>
                <wsse:Password>string</wsse:Password>
                <wsse:Nonce EncodingType="string">string</wsse:Nonce>
                <wsu:Created>string</wsu:Created>
               </wsse:UsernameToken>
               <wsu:Timestamp wsu:Id="string">
                <wsu:Created>string</wsu:Created>
                <wsu:Expires>string</wsu:Expires>
               </wsu:Timestamp>
              </wsse:Security>
             </soapenv:Header>
             <soapenv:Body>
              <vad:getDataAllowance_1 xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1"><!-- mandatory -->
               <vad:account><!-- mandatory -->
                <ns1:portalID>string</ns1:portalID>
                <ns1:msisdn>string</ns1:msisdn>
                <ns1:accountDetail>
                 <ns1:billingAccountType><!-- mandatory -->string</ns1:billingAccountType>
                 <ns1:accountNumber><!-- mandatory -->string</ns1:accountNumber>
                 <ns1:msisdn><!-- mandatory -->string</ns1:msisdn>
                </ns1:accountDetail>
               </vad:account>
               <vad:dataSource>string</vad:dataSource>
               <vad:productList>
                <vad:tariffProductId><!-- mandatory -->string</vad:tariffProductId>
                <vad:services>
                 <vad:productId><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->string</vad:productId>
                </vad:services>
               </vad:productList>
               <vad:returnAllowanceByBundleType>string</vad:returnAllowanceByBundleType>
              </vad:getDataAllowance_1>
             </soapenv:Body>
            </soapenv:Envelope>
        getDataAllowance_1Header:
          type: object
          properties:
            Security:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/Security'
        getDataAllowance_1Output:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Body:
                  type: object
                  properties:
                    getDataAllowance_1Response:
                      $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getDataAllowance_1Response_vad'
              required:
              - Body
          required:
          - Envelope
          example: |2-

            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Body>
              <vad:getDataAllowance_1Response xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2">
               <vad:accountAllowances>
                <vad:accountNumber><!-- mandatory -->string</vad:accountNumber>
                <vad:allowance><!-- between zero and unlimited repetitions of this element -->
                 <vad:productCode>string</vad:productCode>
                 <vad:productName><!-- mandatory -->string</vad:productName>
                 <vad:productType><!-- mandatory -->string</vad:productType>
                 <vad:productDescription>string</vad:productDescription>
                 <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                 <vad:suspended>true</vad:suspended>
                 <vad:allowanceDetail><!-- mandatory -->
                  <vad:allowanceSummary><!-- mandatory -->
                   <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                   <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                   <vad:allowanceRemaining>3</vad:allowanceRemaining>
                  </vad:allowanceSummary>
                  <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                  <vad:restricted>true</vad:restricted>
                 </vad:allowanceDetail>
                 <vad:allowanceText>string</vad:allowanceText>
                </vad:allowance>
               </vad:accountAllowances>
               <vad:msisdnLevelAllowances>
                <vad:msisdn><!-- mandatory -->string</vad:msisdn>
                <vad:dataAllowances>
                 <vad:totalAllowanceSummary><!-- between zero and unlimited repetitions of this element -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                  <vad:dataThresholdType>string</vad:dataThresholdType>
                  <vad:startDate>2016-04-18T14:07:37</vad:startDate>
                  <vad:renewalDate>2016-04-18</vad:renewalDate>
                  <vad:timestamp>2016-04-18T14:07:37</vad:timestamp>
                 </vad:totalAllowanceSummary>
                 <vad:allowance><!-- between zero and unlimited repetitions of this element -->
                  <vad:productCode>string</vad:productCode>
                  <vad:productName><!-- mandatory -->string</vad:productName>
                  <vad:productType><!-- mandatory -->string</vad:productType>
                  <vad:productDescription>string</vad:productDescription>
                  <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                  <vad:suspended>true</vad:suspended>
                  <vad:allowanceDetail><!-- mandatory -->
                   <vad:allowanceSummary><!-- mandatory -->
                    <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                    <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                    <vad:allowanceRemaining>3</vad:allowanceRemaining>
                   </vad:allowanceSummary>
                   <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                   <vad:restricted>true</vad:restricted>
                  </vad:allowanceDetail>
                  <vad:allowanceText>string</vad:allowanceText>
                 </vad:allowance>
                </vad:dataAllowances>
                <vad:dataAllowancesByBundleType>
                 <vad:dataBundle><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                  <vad:bundleType><!-- mandatory -->string</vad:bundleType>
                  <vad:startingAllowance><!-- mandatory -->3</vad:startingAllowance>
                  <vad:allowanceUsed>3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                  <vad:expiryDate>2016-04-18</vad:expiryDate>
                 </vad:dataBundle>
                </vad:dataAllowancesByBundleType>
               </vad:msisdnLevelAllowances>
               <vad:chargingType>string</vad:chargingType>
              </vad:getDataAllowance_1Response>
             </soapenv:Body>
            </soapenv:Envelope>
        getDataAllowance_1Fault:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Body:
                  type: object
                  properties:
                    Fault:
                      type: object
                      properties:
                        faultcode:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        faultstring:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        faultactor:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        detail:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: object
                          properties:
                            getDataAllowance_1Fault:
                              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getDataAllowance_1Fault_val'
              required:
              - Body
          required:
          - Envelope
        getNonDataAllowance_1Input:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Header:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_1Header'
                Body:
                  type: object
                  properties:
                    getNonDataAllowance_1:
                      $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_1_vad'
                  required:
                  - getNonDataAllowance_1
              required:
              - Body
          required:
          - Envelope
          example: |2-

            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Header>
              <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
               <wsse:UsernameToken>
                <wsse:Username>string</wsse:Username>
                <wsse:Password>string</wsse:Password>
                <wsse:Nonce EncodingType="string">string</wsse:Nonce>
                <wsu:Created>string</wsu:Created>
               </wsse:UsernameToken>
               <wsu:Timestamp wsu:Id="string">
                <wsu:Created>string</wsu:Created>
                <wsu:Expires>string</wsu:Expires>
               </wsu:Timestamp>
              </wsse:Security>
             </soapenv:Header>
             <soapenv:Body>
              <vad:getNonDataAllowance_1 xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1"><!-- mandatory -->
               <vad:account><!-- mandatory -->
                <ns1:portalID>string</ns1:portalID>
                <ns1:msisdn>string</ns1:msisdn>
                <ns1:accountDetail>
                 <ns1:billingAccountType><!-- mandatory -->string</ns1:billingAccountType>
                 <ns1:accountNumber><!-- mandatory -->string</ns1:accountNumber>
                 <ns1:msisdn><!-- mandatory -->string</ns1:msisdn>
                </ns1:accountDetail>
               </vad:account>
               <vad:allowanceCategory><!-- between zero and unlimited repetitions of this element -->string</vad:allowanceCategory>
              </vad:getNonDataAllowance_1>
             </soapenv:Body>
            </soapenv:Envelope>
        getNonDataAllowance_1Header:
          type: object
          properties:
            Security:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/Security'
        getNonDataAllowance_1Output:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Body:
                  type: object
                  properties:
                    getNonDataAllowance_1Response:
                      $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_1Response_vad'
              required:
              - Body
          required:
          - Envelope
          example: |2-

            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Body>
              <vad:getNonDataAllowance_1Response xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2">
               <vad:accountAllowances>
                <vad:accountNumber><!-- mandatory -->string</vad:accountNumber>
                <vad:allowance><!-- between zero and unlimited repetitions of this element -->
                 <vad:productCode>string</vad:productCode>
                 <vad:productName><!-- mandatory -->string</vad:productName>
                 <vad:productType><!-- mandatory -->string</vad:productType>
                 <vad:productDescription>string</vad:productDescription>
                 <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                 <vad:suspended>true</vad:suspended>
                 <vad:allowanceDetail><!-- mandatory -->
                  <vad:allowanceSummary><!-- mandatory -->
                   <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                   <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                   <vad:allowanceRemaining>3</vad:allowanceRemaining>
                  </vad:allowanceSummary>
                  <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                  <vad:restricted>true</vad:restricted>
                 </vad:allowanceDetail>
                 <vad:allowanceText>string</vad:allowanceText>
                </vad:allowance>
               </vad:accountAllowances>
               <vad:msisdnLevelAllowances>
                <vad:msisdn><!-- mandatory -->string</vad:msisdn>
                <vad:voiceAllowances>
                 <vad:totalAllowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:totalAllowanceSummary>
                 <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                  <vad:productCode>string</vad:productCode>
                  <vad:productName><!-- mandatory -->string</vad:productName>
                  <vad:productType><!-- mandatory -->string</vad:productType>
                  <vad:productDescription>string</vad:productDescription>
                  <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                  <vad:suspended>true</vad:suspended>
                  <vad:allowanceDetail><!-- mandatory -->
                   <vad:allowanceSummary><!-- mandatory -->
                    <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                    <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                    <vad:allowanceRemaining>3</vad:allowanceRemaining>
                   </vad:allowanceSummary>
                   <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                   <vad:restricted>true</vad:restricted>
                  </vad:allowanceDetail>
                  <vad:allowanceText>string</vad:allowanceText>
                 </vad:allowance>
                </vad:voiceAllowances>
                <vad:messageAllowances>
                 <vad:totalAllowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:totalAllowanceSummary>
                 <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                  <vad:productCode>string</vad:productCode>
                  <vad:productName><!-- mandatory -->string</vad:productName>
                  <vad:productType><!-- mandatory -->string</vad:productType>
                  <vad:productDescription>string</vad:productDescription>
                  <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                  <vad:suspended>true</vad:suspended>
                  <vad:allowanceDetail><!-- mandatory -->
                   <vad:allowanceSummary><!-- mandatory -->
                    <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                    <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                    <vad:allowanceRemaining>3</vad:allowanceRemaining>
                   </vad:allowanceSummary>
                   <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                   <vad:restricted>true</vad:restricted>
                  </vad:allowanceDetail>
                  <vad:allowanceText>string</vad:allowanceText>
                 </vad:allowance>
                </vad:messageAllowances>
                <vad:unlimitedAllowances>
                 <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                  <vad:productCode>string</vad:productCode>
                  <vad:productName><!-- mandatory -->string</vad:productName>
                  <vad:productType><!-- mandatory -->string</vad:productType>
                  <vad:productDescription>string</vad:productDescription>
                  <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                  <vad:suspended>true</vad:suspended>
                  <vad:allowanceDetail><!-- mandatory -->
                   <vad:allowanceSummary><!-- mandatory -->
                    <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                    <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                    <vad:allowanceRemaining>3</vad:allowanceRemaining>
                   </vad:allowanceSummary>
                   <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                   <vad:restricted>true</vad:restricted>
                  </vad:allowanceDetail>
                  <vad:allowanceText>string</vad:allowanceText>
                 </vad:allowance>
                </vad:unlimitedAllowances>
               </vad:msisdnLevelAllowances>
               <vad:chargingType><!-- between zero and unlimited repetitions of this element -->string</vad:chargingType>
              </vad:getNonDataAllowance_1Response>
             </soapenv:Body>
            </soapenv:Envelope>
        getNonDataAllowance_1Fault:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Body:
                  type: object
                  properties:
                    Fault:
                      type: object
                      properties:
                        faultcode:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        faultstring:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        faultactor:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        detail:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: object
                          properties:
                            getNonDataAllowance_1Fault:
                              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_1Fault_val'
              required:
              - Body
          required:
          - Envelope
        getAllowance_2Input:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Header:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowance_2Header'
                Body:
                  type: object
                  properties:
                    getAllowance_2:
                      $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowance_2_vad'
                  required:
                  - getAllowance_2
              required:
              - Body
          required:
          - Envelope
          example: |2-

            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Header>
              <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
               <wsse:UsernameToken>
                <wsse:Username>string</wsse:Username>
                <wsse:Password>string</wsse:Password>
                <wsse:Nonce EncodingType="string">string</wsse:Nonce>
                <wsu:Created>string</wsu:Created>
               </wsse:UsernameToken>
               <wsu:Timestamp wsu:Id="string">
                <wsu:Created>string</wsu:Created>
                <wsu:Expires>string</wsu:Expires>
               </wsu:Timestamp>
              </wsse:Security>
             </soapenv:Header>
             <soapenv:Body>
              <vad:getAllowance_2 xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1"><!-- mandatory -->
               <vad:account><!-- mandatory -->
                <ns1:portalID>string</ns1:portalID>
                <ns1:msisdn>string</ns1:msisdn>
                <ns1:accountDetail>
                 <ns1:billingAccountType><!-- mandatory -->string</ns1:billingAccountType>
                 <ns1:accountNumber><!-- mandatory -->string</ns1:accountNumber>
                 <ns1:msisdn><!-- mandatory -->string</ns1:msisdn>
                </ns1:accountDetail>
               </vad:account>
               <vad:allowanceCategory><!-- between zero and unlimited repetitions of this element -->string</vad:allowanceCategory>
               <vad:dataSource>string</vad:dataSource>
               <vad:productList>
                <vad:tariffProductId><!-- mandatory -->string</vad:tariffProductId>
                <vad:services>
                 <vad:productId><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->string</vad:productId>
                </vad:services>
               </vad:productList>
              </vad:getAllowance_2>
             </soapenv:Body>
            </soapenv:Envelope>
        getAllowance_2Header:
          type: object
          properties:
            Security:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/Security'
        getAllowance_2Output:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Body:
                  type: object
                  properties:
                    getAllowance_2Response:
                      $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowance_2Response_vad'
              required:
              - Body
          required:
          - Envelope
          example: |2-

            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Body>
              <vad:getAllowance_2Response xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2">
               <vad:accountNumber><!-- mandatory -->string</vad:accountNumber>
               <vad:accountAllowances>
                <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                 <vad:productId>string</vad:productId>
                 <vad:allowanceName><!-- mandatory -->string</vad:allowanceName>
                 <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                 <vad:shortDescription><!-- mandatory -->string</vad:shortDescription>
                 <vad:longDescription><!-- mandatory -->string</vad:longDescription>
                 <vad:isRestricted><!-- mandatory -->true</vad:isRestricted>
                 <vad:restrictionCategory><!-- mandatory -->string</vad:restrictionCategory>
                 <vad:isUnlimited><!-- mandatory -->true</vad:isUnlimited>
                 <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                 <vad:orderIndex><!-- mandatory -->3</vad:orderIndex>
                 <vad:allowanceUsageSummary>
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:allowanceUsageSummary>
                </vad:allowance>
               </vad:accountAllowances>
               <vad:msisdnAllowances>
                <vad:msisdn><!-- mandatory -->string</vad:msisdn>
                <vad:allowances>
                 <vad:allowance><!-- between zero and unlimited repetitions of this element -->
                  <vad:productId>string</vad:productId>
                  <vad:allowanceName><!-- mandatory -->string</vad:allowanceName>
                  <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                  <vad:shortDescription><!-- mandatory -->string</vad:shortDescription>
                  <vad:longDescription><!-- mandatory -->string</vad:longDescription>
                  <vad:isRestricted><!-- mandatory -->true</vad:isRestricted>
                  <vad:restrictionCategory><!-- mandatory -->string</vad:restrictionCategory>
                  <vad:isUnlimited><!-- mandatory -->true</vad:isUnlimited>
                  <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                  <vad:orderIndex><!-- mandatory -->3</vad:orderIndex>
                  <vad:allowanceUsageSummary>
                   <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                   <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                   <vad:allowanceRemaining>3</vad:allowanceRemaining>
                  </vad:allowanceUsageSummary>
                 </vad:allowance>
                 <vad:fairUsageAllowances><!-- between zero and unlimited repetitions of this element -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                  <vad:thresholdType>string</vad:thresholdType>
                  <vad:startDate>2016-04-18T14:07:37</vad:startDate>
                  <vad:renewalDate>2016-04-18</vad:renewalDate>
                  <vad:timestamp>2016-04-18T14:07:37</vad:timestamp>
                 </vad:fairUsageAllowances>
                </vad:allowances>
               </vad:msisdnAllowances>
               <vad:chargingType><!-- between zero and unlimited repetitions of this element -->string</vad:chargingType>
              </vad:getAllowance_2Response>
             </soapenv:Body>
            </soapenv:Envelope>
        getAllowance_2Fault:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Body:
                  type: object
                  properties:
                    Fault:
                      type: object
                      properties:
                        faultcode:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        faultstring:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        faultactor:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        detail:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: object
                          properties:
                            getAllowance_2Fault:
                              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getAllowance_2Fault_val'
              required:
              - Body
          required:
          - Envelope
        getNonDataAllowance_2Input:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Header:
                  $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_2Header'
                Body:
                  type: object
                  properties:
                    getNonDataAllowance_2:
                      $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_2_vad'
                  required:
                  - getNonDataAllowance_2
              required:
              - Body
          required:
          - Envelope
          example: |2-

            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Header>
              <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
               <wsse:UsernameToken>
                <wsse:Username>string</wsse:Username>
                <wsse:Password>string</wsse:Password>
                <wsse:Nonce EncodingType="string">string</wsse:Nonce>
                <wsu:Created>string</wsu:Created>
               </wsse:UsernameToken>
               <wsu:Timestamp wsu:Id="string">
                <wsu:Created>string</wsu:Created>
                <wsu:Expires>string</wsu:Expires>
               </wsu:Timestamp>
              </wsse:Security>
             </soapenv:Header>
             <soapenv:Body>
              <vad:getNonDataAllowance_2 xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1"><!-- mandatory -->
               <vad:account><!-- mandatory -->
                <ns1:portalID>string</ns1:portalID>
                <ns1:msisdn>string</ns1:msisdn>
                <ns1:accountDetail>
                 <ns1:billingAccountType><!-- mandatory -->string</ns1:billingAccountType>
                 <ns1:accountNumber><!-- mandatory -->string</ns1:accountNumber>
                 <ns1:msisdn><!-- mandatory -->string</ns1:msisdn>
                </ns1:accountDetail>
               </vad:account>
               <vad:allowanceCategory><!-- between zero and unlimited repetitions of this element -->string</vad:allowanceCategory>
              </vad:getNonDataAllowance_2>
             </soapenv:Body>
            </soapenv:Envelope>
        getNonDataAllowance_2Header:
          type: object
          properties:
            Security:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/Security'
        getNonDataAllowance_2Output:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Body:
                  type: object
                  properties:
                    getNonDataAllowance_2Response:
                      $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_2Response_vad'
              required:
              - Body
          required:
          - Envelope
          example: |2-

            <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Body>
              <vad:getNonDataAllowance_2Response xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2">
               <vad:accountNumber><!-- mandatory -->string</vad:accountNumber>
               <vad:accountAllowances>
                <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                 <vad:productId>string</vad:productId>
                 <vad:allowanceName><!-- mandatory -->string</vad:allowanceName>
                 <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                 <vad:shortDescription><!-- mandatory -->string</vad:shortDescription>
                 <vad:longDescription><!-- mandatory -->string</vad:longDescription>
                 <vad:isRestricted><!-- mandatory -->true</vad:isRestricted>
                 <vad:restrictionCategory><!-- mandatory -->string</vad:restrictionCategory>
                 <vad:isUnlimited><!-- mandatory -->true</vad:isUnlimited>
                 <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                 <vad:orderIndex><!-- mandatory -->3</vad:orderIndex>
                 <vad:allowanceUsageSummary>
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:allowanceUsageSummary>
                </vad:allowance>
               </vad:accountAllowances>
               <vad:msisdnLevelNonDataAllowances>
                <vad:msisdn><!-- mandatory -->string</vad:msisdn>
                <vad:allowances>
                 <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                  <vad:productId>string</vad:productId>
                  <vad:allowanceName><!-- mandatory -->string</vad:allowanceName>
                  <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                  <vad:shortDescription><!-- mandatory -->string</vad:shortDescription>
                  <vad:longDescription><!-- mandatory -->string</vad:longDescription>
                  <vad:isRestricted><!-- mandatory -->true</vad:isRestricted>
                  <vad:restrictionCategory><!-- mandatory -->string</vad:restrictionCategory>
                  <vad:isUnlimited><!-- mandatory -->true</vad:isUnlimited>
                  <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                  <vad:orderIndex><!-- mandatory -->3</vad:orderIndex>
                  <vad:allowanceUsageSummary>
                   <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                   <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                   <vad:allowanceRemaining>3</vad:allowanceRemaining>
                  </vad:allowanceUsageSummary>
                 </vad:allowance>
                </vad:allowances>
               </vad:msisdnLevelNonDataAllowances>
               <vad:chargingType><!-- between zero and unlimited repetitions of this element -->string</vad:chargingType>
              </vad:getNonDataAllowance_2Response>
             </soapenv:Body>
            </soapenv:Envelope>
        getNonDataAllowance_2Fault:
          type: object
          properties:
            Envelope:
              xml:
                prefix: soapenv
                namespace: http://schemas.xmlsoap.org/soap/envelope/
              type: object
              properties:
                Body:
                  type: object
                  properties:
                    Fault:
                      type: object
                      properties:
                        faultcode:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        faultstring:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        faultactor:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: string
                        detail:
                          xml:
                            prefix: ""
                            namespace: ""
                          type: object
                          properties:
                            getNonDataAllowance_2Fault:
                              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/getNonDataAllowance_2Fault_val'
              required:
              - Body
          required:
          - Envelope
        getAllowance_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            account:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountType_ns1_vad'
            allowanceCategory:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceCategoryType_vad'
            dataSource:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/dataSourceType_vad'
            productList:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/productListType_vad'
            returnAllowanceByBundleType:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/typeYesOrNo_vad'
          required:
          - account
          description: "A complex type holding the keys to retrieve both airtime\n\t\t\t\tand
            data allowances and usage details."
          example: |2-

            <vad:getAllowance xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1">
             <vad:account><!-- mandatory -->
              <ns1:portalID>string</ns1:portalID>
              <ns1:msisdn>string</ns1:msisdn>
              <ns1:accountDetail>
               <ns1:billingAccountType><!-- mandatory -->string</ns1:billingAccountType>
               <ns1:accountNumber><!-- mandatory -->string</ns1:accountNumber>
               <ns1:msisdn><!-- mandatory -->string</ns1:msisdn>
              </ns1:accountDetail>
             </vad:account>
             <vad:allowanceCategory><!-- between zero and unlimited repetitions of this element -->string</vad:allowanceCategory>
             <vad:dataSource>string</vad:dataSource>
             <vad:productList>
              <vad:tariffProductId><!-- mandatory -->string</vad:tariffProductId>
              <vad:services>
               <vad:productId><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->string</vad:productId>
              </vad:services>
             </vad:productList>
             <vad:returnAllowanceByBundleType>string</vad:returnAllowanceByBundleType>
            </vad:getAllowance>
        getAllowanceResponse_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            accountAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountAllowancesType_vad'
            msisdnAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/msisdnAllowances_vad'
            chargingType:
              type: array
              items:
                type: string
          description: The service response, contains multiple allowances.
          example: |2-

            <vad:getAllowanceResponse xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2">
             <vad:accountAllowances>
              <vad:accountNumber><!-- mandatory -->string</vad:accountNumber>
              <vad:allowance><!-- between zero and unlimited repetitions of this element -->
               <vad:productCode>string</vad:productCode>
               <vad:productName><!-- mandatory -->string</vad:productName>
               <vad:productType><!-- mandatory -->string</vad:productType>
               <vad:productDescription>string</vad:productDescription>
               <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
               <vad:suspended>true</vad:suspended>
               <vad:allowanceDetail><!-- mandatory -->
                <vad:allowanceSummary><!-- mandatory -->
                 <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                 <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                 <vad:allowanceRemaining>3</vad:allowanceRemaining>
                </vad:allowanceSummary>
                <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                <vad:restricted>true</vad:restricted>
               </vad:allowanceDetail>
               <vad:allowanceText>string</vad:allowanceText>
              </vad:allowance>
             </vad:accountAllowances>
             <vad:msisdnAllowances>
              <vad:msisdn><!-- mandatory -->string</vad:msisdn>
              <vad:voiceAllowances>
               <vad:totalAllowanceSummary><!-- mandatory -->
                <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                <vad:allowanceRemaining>3</vad:allowanceRemaining>
               </vad:totalAllowanceSummary>
               <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                <vad:productCode>string</vad:productCode>
                <vad:productName><!-- mandatory -->string</vad:productName>
                <vad:productType><!-- mandatory -->string</vad:productType>
                <vad:productDescription>string</vad:productDescription>
                <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                <vad:suspended>true</vad:suspended>
                <vad:allowanceDetail><!-- mandatory -->
                 <vad:allowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:allowanceSummary>
                 <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                 <vad:restricted>true</vad:restricted>
                </vad:allowanceDetail>
                <vad:allowanceText>string</vad:allowanceText>
               </vad:allowance>
              </vad:voiceAllowances>
              <vad:messageAllowances>
               <vad:totalAllowanceSummary><!-- mandatory -->
                <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                <vad:allowanceRemaining>3</vad:allowanceRemaining>
               </vad:totalAllowanceSummary>
               <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                <vad:productCode>string</vad:productCode>
                <vad:productName><!-- mandatory -->string</vad:productName>
                <vad:productType><!-- mandatory -->string</vad:productType>
                <vad:productDescription>string</vad:productDescription>
                <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                <vad:suspended>true</vad:suspended>
                <vad:allowanceDetail><!-- mandatory -->
                 <vad:allowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:allowanceSummary>
                 <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                 <vad:restricted>true</vad:restricted>
                </vad:allowanceDetail>
                <vad:allowanceText>string</vad:allowanceText>
               </vad:allowance>
              </vad:messageAllowances>
              <vad:dataAllowances>
               <vad:totalAllowanceSummary><!-- between zero and unlimited repetitions of this element -->
                <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                <vad:allowanceRemaining>3</vad:allowanceRemaining>
                <vad:dataThresholdType>string</vad:dataThresholdType>
                <vad:startDate>2016-04-18T14:07:37</vad:startDate>
                <vad:renewalDate>2016-04-18</vad:renewalDate>
                <vad:timestamp>2016-04-18T14:07:37</vad:timestamp>
               </vad:totalAllowanceSummary>
               <vad:allowance><!-- between zero and unlimited repetitions of this element -->
                <vad:productCode>string</vad:productCode>
                <vad:productName><!-- mandatory -->string</vad:productName>
                <vad:productType><!-- mandatory -->string</vad:productType>
                <vad:productDescription>string</vad:productDescription>
                <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                <vad:suspended>true</vad:suspended>
                <vad:allowanceDetail><!-- mandatory -->
                 <vad:allowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:allowanceSummary>
                 <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                 <vad:restricted>true</vad:restricted>
                </vad:allowanceDetail>
                <vad:allowanceText>string</vad:allowanceText>
               </vad:allowance>
               <vad:dataAllowancesByBundleType>
                <vad:dataBundle><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                 <vad:bundleType><!-- mandatory -->string</vad:bundleType>
                 <vad:startingAllowance><!-- mandatory -->3</vad:startingAllowance>
                 <vad:allowanceUsed>3</vad:allowanceUsed>
                 <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 <vad:expiryDate>2016-04-18</vad:expiryDate>
                </vad:dataBundle>
               </vad:dataAllowancesByBundleType>
              </vad:dataAllowances>
              <vad:unlimitedAllowances>
               <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                <vad:productCode>string</vad:productCode>
                <vad:productName><!-- mandatory -->string</vad:productName>
                <vad:productType><!-- mandatory -->string</vad:productType>
                <vad:productDescription>string</vad:productDescription>
                <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                <vad:suspended>true</vad:suspended>
                <vad:allowanceDetail><!-- mandatory -->
                 <vad:allowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:allowanceSummary>
                 <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                 <vad:restricted>true</vad:restricted>
                </vad:allowanceDetail>
                <vad:allowanceText>string</vad:allowanceText>
               </vad:allowance>
              </vad:unlimitedAllowances>
             </vad:msisdnAllowances>
             <vad:chargingType><!-- between zero and unlimited repetitions of this element -->string</vad:chargingType>
            </vad:getAllowanceResponse>
        getAllowanceFault_val:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            SOAFaultOriginator:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOAFaultOriginator_ns1'
            SOAFaultCode:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOAFaultCode_ns1'
            faultDescription:
              type: string
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              description: A human readable description of the error.
            faultTrace:
              type: string
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              description: "A computer generated dump of the fault (may help\n\t\t\t\t\t\tin
                debugging problems)."
            SOATransactionID:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOATransactionID_ns1'
          required:
          - SOAFaultOriginator
          - SOAFaultCode
          description: "The type of the response sent to the calling\n\t\t\t\tapplication,
            if something goes wrong."
          example: |2-

            <vad:getAllowanceFault xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1">
             <ns1:SOAFaultOriginator><!-- mandatory -->string</ns1:SOAFaultOriginator>
             <ns1:SOAFaultCode><!-- mandatory -->string</ns1:SOAFaultCode>
             <ns1:faultDescription>string</ns1:faultDescription>
             <ns1:faultTrace>string</ns1:faultTrace>
             <ns1:SOATransactionID>string</ns1:SOATransactionID>
            </vad:getAllowanceFault>
        getDataAllowance_1_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            account:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountType_ns1_vad'
            dataSource:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/dataSourceType_vad'
            productList:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/productListType_vad'
            returnAllowanceByBundleType:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/typeYesOrNo_vad'
          required:
          - account
          description: A complex type holding the keys to retrieve data allowance
            usage details.
          example: |2-

            <vad:getDataAllowance_1 xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1">
             <vad:account><!-- mandatory -->
              <ns1:portalID>string</ns1:portalID>
              <ns1:msisdn>string</ns1:msisdn>
              <ns1:accountDetail>
               <ns1:billingAccountType><!-- mandatory -->string</ns1:billingAccountType>
               <ns1:accountNumber><!-- mandatory -->string</ns1:accountNumber>
               <ns1:msisdn><!-- mandatory -->string</ns1:msisdn>
              </ns1:accountDetail>
             </vad:account>
             <vad:dataSource>string</vad:dataSource>
             <vad:productList>
              <vad:tariffProductId><!-- mandatory -->string</vad:tariffProductId>
              <vad:services>
               <vad:productId><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->string</vad:productId>
              </vad:services>
             </vad:productList>
             <vad:returnAllowanceByBundleType>string</vad:returnAllowanceByBundleType>
            </vad:getDataAllowance_1>
        getDataAllowance_1Response_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            accountAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountAllowancesType_vad'
            msisdnLevelAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/msisdnLevelDataAllowancesType_vad'
            chargingType:
              type: string
          description: The service response, contains multiple allowances.
          example: |2-

            <vad:getDataAllowance_1Response xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2">
             <vad:accountAllowances>
              <vad:accountNumber><!-- mandatory -->string</vad:accountNumber>
              <vad:allowance><!-- between zero and unlimited repetitions of this element -->
               <vad:productCode>string</vad:productCode>
               <vad:productName><!-- mandatory -->string</vad:productName>
               <vad:productType><!-- mandatory -->string</vad:productType>
               <vad:productDescription>string</vad:productDescription>
               <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
               <vad:suspended>true</vad:suspended>
               <vad:allowanceDetail><!-- mandatory -->
                <vad:allowanceSummary><!-- mandatory -->
                 <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                 <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                 <vad:allowanceRemaining>3</vad:allowanceRemaining>
                </vad:allowanceSummary>
                <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                <vad:restricted>true</vad:restricted>
               </vad:allowanceDetail>
               <vad:allowanceText>string</vad:allowanceText>
              </vad:allowance>
             </vad:accountAllowances>
             <vad:msisdnLevelAllowances>
              <vad:msisdn><!-- mandatory -->string</vad:msisdn>
              <vad:dataAllowances>
               <vad:totalAllowanceSummary><!-- between zero and unlimited repetitions of this element -->
                <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                <vad:allowanceRemaining>3</vad:allowanceRemaining>
                <vad:dataThresholdType>string</vad:dataThresholdType>
                <vad:startDate>2016-04-18T14:07:37</vad:startDate>
                <vad:renewalDate>2016-04-18</vad:renewalDate>
                <vad:timestamp>2016-04-18T14:07:37</vad:timestamp>
               </vad:totalAllowanceSummary>
               <vad:allowance><!-- between zero and unlimited repetitions of this element -->
                <vad:productCode>string</vad:productCode>
                <vad:productName><!-- mandatory -->string</vad:productName>
                <vad:productType><!-- mandatory -->string</vad:productType>
                <vad:productDescription>string</vad:productDescription>
                <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                <vad:suspended>true</vad:suspended>
                <vad:allowanceDetail><!-- mandatory -->
                 <vad:allowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:allowanceSummary>
                 <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                 <vad:restricted>true</vad:restricted>
                </vad:allowanceDetail>
                <vad:allowanceText>string</vad:allowanceText>
               </vad:allowance>
              </vad:dataAllowances>
              <vad:dataAllowancesByBundleType>
               <vad:dataBundle><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                <vad:bundleType><!-- mandatory -->string</vad:bundleType>
                <vad:startingAllowance><!-- mandatory -->3</vad:startingAllowance>
                <vad:allowanceUsed>3</vad:allowanceUsed>
                <vad:allowanceRemaining>3</vad:allowanceRemaining>
                <vad:expiryDate>2016-04-18</vad:expiryDate>
               </vad:dataBundle>
              </vad:dataAllowancesByBundleType>
             </vad:msisdnLevelAllowances>
             <vad:chargingType>string</vad:chargingType>
            </vad:getDataAllowance_1Response>
        getDataAllowance_1Fault_val:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            SOAFaultOriginator:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOAFaultOriginator_ns1'
            SOAFaultCode:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOAFaultCode_ns1'
            faultDescription:
              type: string
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              description: A human readable description of the error.
            faultTrace:
              type: string
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              description: "A computer generated dump of the fault (may help\n\t\t\t\t\t\tin
                debugging problems)."
            SOATransactionID:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOATransactionID_ns1'
          required:
          - SOAFaultOriginator
          - SOAFaultCode
          description: "The type of the response sent to the calling\n\t\t\t\tapplication,
            if something goes wrong."
          example: |2-

            <vad:getDataAllowance_1Fault xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1">
             <ns1:SOAFaultOriginator><!-- mandatory -->string</ns1:SOAFaultOriginator>
             <ns1:SOAFaultCode><!-- mandatory -->string</ns1:SOAFaultCode>
             <ns1:faultDescription>string</ns1:faultDescription>
             <ns1:faultTrace>string</ns1:faultTrace>
             <ns1:SOATransactionID>string</ns1:SOATransactionID>
            </vad:getDataAllowance_1Fault>
        getNonDataAllowance_1_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            account:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountType_ns1_vad'
            allowanceCategory:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceCategoryType_vad'
          required:
          - account
          description: "A complex type holding the keys to retrieve both airtime\n\t\t\t\tand
            data allowances and usage details."
          example: |2-

            <vad:getNonDataAllowance_1 xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1">
             <vad:account><!-- mandatory -->
              <ns1:portalID>string</ns1:portalID>
              <ns1:msisdn>string</ns1:msisdn>
              <ns1:accountDetail>
               <ns1:billingAccountType><!-- mandatory -->string</ns1:billingAccountType>
               <ns1:accountNumber><!-- mandatory -->string</ns1:accountNumber>
               <ns1:msisdn><!-- mandatory -->string</ns1:msisdn>
              </ns1:accountDetail>
             </vad:account>
             <vad:allowanceCategory><!-- between zero and unlimited repetitions of this element -->string</vad:allowanceCategory>
            </vad:getNonDataAllowance_1>
        getNonDataAllowance_1Response_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            accountAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountAllowancesType_vad'
            msisdnLevelAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/msisdnLevelNonDataAllowancesType_vad'
            chargingType:
              type: array
              items:
                type: string
          description: The service response, contains multiple allowances.
          example: |2-

            <vad:getNonDataAllowance_1Response xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2">
             <vad:accountAllowances>
              <vad:accountNumber><!-- mandatory -->string</vad:accountNumber>
              <vad:allowance><!-- between zero and unlimited repetitions of this element -->
               <vad:productCode>string</vad:productCode>
               <vad:productName><!-- mandatory -->string</vad:productName>
               <vad:productType><!-- mandatory -->string</vad:productType>
               <vad:productDescription>string</vad:productDescription>
               <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
               <vad:suspended>true</vad:suspended>
               <vad:allowanceDetail><!-- mandatory -->
                <vad:allowanceSummary><!-- mandatory -->
                 <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                 <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                 <vad:allowanceRemaining>3</vad:allowanceRemaining>
                </vad:allowanceSummary>
                <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                <vad:restricted>true</vad:restricted>
               </vad:allowanceDetail>
               <vad:allowanceText>string</vad:allowanceText>
              </vad:allowance>
             </vad:accountAllowances>
             <vad:msisdnLevelAllowances>
              <vad:msisdn><!-- mandatory -->string</vad:msisdn>
              <vad:voiceAllowances>
               <vad:totalAllowanceSummary><!-- mandatory -->
                <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                <vad:allowanceRemaining>3</vad:allowanceRemaining>
               </vad:totalAllowanceSummary>
               <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                <vad:productCode>string</vad:productCode>
                <vad:productName><!-- mandatory -->string</vad:productName>
                <vad:productType><!-- mandatory -->string</vad:productType>
                <vad:productDescription>string</vad:productDescription>
                <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                <vad:suspended>true</vad:suspended>
                <vad:allowanceDetail><!-- mandatory -->
                 <vad:allowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:allowanceSummary>
                 <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                 <vad:restricted>true</vad:restricted>
                </vad:allowanceDetail>
                <vad:allowanceText>string</vad:allowanceText>
               </vad:allowance>
              </vad:voiceAllowances>
              <vad:messageAllowances>
               <vad:totalAllowanceSummary><!-- mandatory -->
                <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                <vad:allowanceRemaining>3</vad:allowanceRemaining>
               </vad:totalAllowanceSummary>
               <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                <vad:productCode>string</vad:productCode>
                <vad:productName><!-- mandatory -->string</vad:productName>
                <vad:productType><!-- mandatory -->string</vad:productType>
                <vad:productDescription>string</vad:productDescription>
                <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                <vad:suspended>true</vad:suspended>
                <vad:allowanceDetail><!-- mandatory -->
                 <vad:allowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:allowanceSummary>
                 <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                 <vad:restricted>true</vad:restricted>
                </vad:allowanceDetail>
                <vad:allowanceText>string</vad:allowanceText>
               </vad:allowance>
              </vad:messageAllowances>
              <vad:unlimitedAllowances>
               <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                <vad:productCode>string</vad:productCode>
                <vad:productName><!-- mandatory -->string</vad:productName>
                <vad:productType><!-- mandatory -->string</vad:productType>
                <vad:productDescription>string</vad:productDescription>
                <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                <vad:suspended>true</vad:suspended>
                <vad:allowanceDetail><!-- mandatory -->
                 <vad:allowanceSummary><!-- mandatory -->
                  <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                  <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                  <vad:allowanceRemaining>3</vad:allowanceRemaining>
                 </vad:allowanceSummary>
                 <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                 <vad:restricted>true</vad:restricted>
                </vad:allowanceDetail>
                <vad:allowanceText>string</vad:allowanceText>
               </vad:allowance>
              </vad:unlimitedAllowances>
             </vad:msisdnLevelAllowances>
             <vad:chargingType><!-- between zero and unlimited repetitions of this element -->string</vad:chargingType>
            </vad:getNonDataAllowance_1Response>
        getNonDataAllowance_1Fault_val:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            SOAFaultOriginator:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOAFaultOriginator_ns1'
            SOAFaultCode:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOAFaultCode_ns1'
            faultDescription:
              type: string
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              description: A human readable description of the error.
            faultTrace:
              type: string
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              description: "A computer generated dump of the fault (may help\n\t\t\t\t\t\tin
                debugging problems)."
            SOATransactionID:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOATransactionID_ns1'
          required:
          - SOAFaultOriginator
          - SOAFaultCode
          description: "The type of the response sent to the calling\n\t\t\t\tapplication,
            if something goes wrong."
          example: |2-

            <vad:getNonDataAllowance_1Fault xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1">
             <ns1:SOAFaultOriginator><!-- mandatory -->string</ns1:SOAFaultOriginator>
             <ns1:SOAFaultCode><!-- mandatory -->string</ns1:SOAFaultCode>
             <ns1:faultDescription>string</ns1:faultDescription>
             <ns1:faultTrace>string</ns1:faultTrace>
             <ns1:SOATransactionID>string</ns1:SOATransactionID>
            </vad:getNonDataAllowance_1Fault>
        getAllowance_2_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            account:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountType_ns1_vad'
            allowanceCategory:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceCategoryType_vad'
            dataSource:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/dataSourceType_vad'
            productList:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/productListType_vad'
          required:
          - account
          description: "A complex type holding the keys to retrieve both airtime\n\t\t\t\tand
            data allowances and usage details."
          example: |2-

            <vad:getAllowance_2 xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1">
             <vad:account><!-- mandatory -->
              <ns1:portalID>string</ns1:portalID>
              <ns1:msisdn>string</ns1:msisdn>
              <ns1:accountDetail>
               <ns1:billingAccountType><!-- mandatory -->string</ns1:billingAccountType>
               <ns1:accountNumber><!-- mandatory -->string</ns1:accountNumber>
               <ns1:msisdn><!-- mandatory -->string</ns1:msisdn>
              </ns1:accountDetail>
             </vad:account>
             <vad:allowanceCategory><!-- between zero and unlimited repetitions of this element -->string</vad:allowanceCategory>
             <vad:dataSource>string</vad:dataSource>
             <vad:productList>
              <vad:tariffProductId><!-- mandatory -->string</vad:tariffProductId>
              <vad:services>
               <vad:productId><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->string</vad:productId>
              </vad:services>
             </vad:productList>
            </vad:getAllowance_2>
        getAllowance_2Response_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            accountNumber:
              xml:
                namespace: http://soa.o2.co.uk/viewallowancedata_2
                prefix: vad
              type: string
              maxLength: 20
              minLength: 6
              description: "A billing account, as it appears in the back end billing\n\t\t\t\tsystem
                (Companion).;\nThe Companion account number for this number (if\n\t\t\t\t\t\trelevant)."
            accountAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountAllowances_2Type_vad'
            msisdnAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/msisdnAllowances_2Type_vad'
            chargingType:
              type: array
              items:
                type: string
          required:
          - accountNumber
          description: The service response, contains multiple allowances.
          example: |2-

            <vad:getAllowance_2Response xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2">
             <vad:accountNumber><!-- mandatory -->string</vad:accountNumber>
             <vad:accountAllowances>
              <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
               <vad:productId>string</vad:productId>
               <vad:allowanceName><!-- mandatory -->string</vad:allowanceName>
               <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
               <vad:shortDescription><!-- mandatory -->string</vad:shortDescription>
               <vad:longDescription><!-- mandatory -->string</vad:longDescription>
               <vad:isRestricted><!-- mandatory -->true</vad:isRestricted>
               <vad:restrictionCategory><!-- mandatory -->string</vad:restrictionCategory>
               <vad:isUnlimited><!-- mandatory -->true</vad:isUnlimited>
               <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
               <vad:orderIndex><!-- mandatory -->3</vad:orderIndex>
               <vad:allowanceUsageSummary>
                <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                <vad:allowanceRemaining>3</vad:allowanceRemaining>
               </vad:allowanceUsageSummary>
              </vad:allowance>
             </vad:accountAllowances>
             <vad:msisdnAllowances>
              <vad:msisdn><!-- mandatory -->string</vad:msisdn>
              <vad:allowances>
               <vad:allowance><!-- between zero and unlimited repetitions of this element -->
                <vad:productId>string</vad:productId>
                <vad:allowanceName><!-- mandatory -->string</vad:allowanceName>
                <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                <vad:shortDescription><!-- mandatory -->string</vad:shortDescription>
                <vad:longDescription><!-- mandatory -->string</vad:longDescription>
                <vad:isRestricted><!-- mandatory -->true</vad:isRestricted>
                <vad:restrictionCategory><!-- mandatory -->string</vad:restrictionCategory>
                <vad:isUnlimited><!-- mandatory -->true</vad:isUnlimited>
                <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                <vad:orderIndex><!-- mandatory -->3</vad:orderIndex>
                <vad:allowanceUsageSummary>
                 <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                 <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                 <vad:allowanceRemaining>3</vad:allowanceRemaining>
                </vad:allowanceUsageSummary>
               </vad:allowance>
               <vad:fairUsageAllowances><!-- between zero and unlimited repetitions of this element -->
                <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                <vad:allowanceRemaining>3</vad:allowanceRemaining>
                <vad:thresholdType>string</vad:thresholdType>
                <vad:startDate>2016-04-18T14:07:37</vad:startDate>
                <vad:renewalDate>2016-04-18</vad:renewalDate>
                <vad:timestamp>2016-04-18T14:07:37</vad:timestamp>
               </vad:fairUsageAllowances>
              </vad:allowances>
             </vad:msisdnAllowances>
             <vad:chargingType><!-- between zero and unlimited repetitions of this element -->string</vad:chargingType>
            </vad:getAllowance_2Response>
        getAllowance_2Fault_val:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            SOAFaultOriginator:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOAFaultOriginator_ns1'
            SOAFaultCode:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOAFaultCode_ns1'
            faultDescription:
              type: string
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              description: A human readable description of the error.
            faultTrace:
              type: string
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              description: "A computer generated dump of the fault (may help\n\t\t\t\t\t\tin
                debugging problems)."
            SOATransactionID:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOATransactionID_ns1'
          required:
          - SOAFaultOriginator
          - SOAFaultCode
          description: "The type of the response sent to the calling\n\t\t\t\tapplication,
            if something goes wrong."
          example: |2-

            <vad:getAllowance_2Fault xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1">
             <ns1:SOAFaultOriginator><!-- mandatory -->string</ns1:SOAFaultOriginator>
             <ns1:SOAFaultCode><!-- mandatory -->string</ns1:SOAFaultCode>
             <ns1:faultDescription>string</ns1:faultDescription>
             <ns1:faultTrace>string</ns1:faultTrace>
             <ns1:SOATransactionID>string</ns1:SOATransactionID>
            </vad:getAllowance_2Fault>
        getNonDataAllowance_2_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            account:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountType_ns1_vad'
            allowanceCategory:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceCategoryType_vad'
          required:
          - account
          description: "A complex type holding the keys to retrieve both airtime\n\t\t\t\tand
            data allowances and usage details."
          example: |2-

            <vad:getNonDataAllowance_2 xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1">
             <vad:account><!-- mandatory -->
              <ns1:portalID>string</ns1:portalID>
              <ns1:msisdn>string</ns1:msisdn>
              <ns1:accountDetail>
               <ns1:billingAccountType><!-- mandatory -->string</ns1:billingAccountType>
               <ns1:accountNumber><!-- mandatory -->string</ns1:accountNumber>
               <ns1:msisdn><!-- mandatory -->string</ns1:msisdn>
              </ns1:accountDetail>
             </vad:account>
             <vad:allowanceCategory><!-- between zero and unlimited repetitions of this element -->string</vad:allowanceCategory>
            </vad:getNonDataAllowance_2>
        getNonDataAllowance_2Response_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            accountNumber:
              xml:
                namespace: http://soa.o2.co.uk/viewallowancedata_2
                prefix: vad
              type: string
              maxLength: 20
              minLength: 6
              description: "A billing account, as it appears in the back end billing\n\t\t\t\tsystem
                (Companion).;\nThe Companion account number for this number (if\n\t\t\t\t\t\trelevant)."
            accountAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountAllowances_2Type_vad'
            msisdnLevelNonDataAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/msisdnNonDataAllowances_2Type_vad'
            chargingType:
              type: array
              items:
                type: string
          required:
          - accountNumber
          description: The service response, contains multiple allowances.
          example: |2-

            <vad:getNonDataAllowance_2Response xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2">
             <vad:accountNumber><!-- mandatory -->string</vad:accountNumber>
             <vad:accountAllowances>
              <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
               <vad:productId>string</vad:productId>
               <vad:allowanceName><!-- mandatory -->string</vad:allowanceName>
               <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
               <vad:shortDescription><!-- mandatory -->string</vad:shortDescription>
               <vad:longDescription><!-- mandatory -->string</vad:longDescription>
               <vad:isRestricted><!-- mandatory -->true</vad:isRestricted>
               <vad:restrictionCategory><!-- mandatory -->string</vad:restrictionCategory>
               <vad:isUnlimited><!-- mandatory -->true</vad:isUnlimited>
               <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
               <vad:orderIndex><!-- mandatory -->3</vad:orderIndex>
               <vad:allowanceUsageSummary>
                <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                <vad:allowanceRemaining>3</vad:allowanceRemaining>
               </vad:allowanceUsageSummary>
              </vad:allowance>
             </vad:accountAllowances>
             <vad:msisdnLevelNonDataAllowances>
              <vad:msisdn><!-- mandatory -->string</vad:msisdn>
              <vad:allowances>
               <vad:allowance><!-- mandatory --><!-- between 1 and unlimited repetitions of this element -->
                <vad:productId>string</vad:productId>
                <vad:allowanceName><!-- mandatory -->string</vad:allowanceName>
                <vad:allowanceUnit><!-- mandatory -->string</vad:allowanceUnit>
                <vad:shortDescription><!-- mandatory -->string</vad:shortDescription>
                <vad:longDescription><!-- mandatory -->string</vad:longDescription>
                <vad:isRestricted><!-- mandatory -->true</vad:isRestricted>
                <vad:restrictionCategory><!-- mandatory -->string</vad:restrictionCategory>
                <vad:isUnlimited><!-- mandatory -->true</vad:isUnlimited>
                <vad:expiryDate><!-- mandatory -->2016-04-18</vad:expiryDate>
                <vad:orderIndex><!-- mandatory -->3</vad:orderIndex>
                <vad:allowanceUsageSummary>
                 <vad:startingBalance><!-- mandatory -->3</vad:startingBalance>
                 <vad:allowanceUsed><!-- mandatory -->3</vad:allowanceUsed>
                 <vad:allowanceRemaining>3</vad:allowanceRemaining>
                </vad:allowanceUsageSummary>
               </vad:allowance>
              </vad:allowances>
             </vad:msisdnLevelNonDataAllowances>
             <vad:chargingType><!-- between zero and unlimited repetitions of this element -->string</vad:chargingType>
            </vad:getNonDataAllowance_2Response>
        getNonDataAllowance_2Fault_val:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            SOAFaultOriginator:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOAFaultOriginator_ns1'
            SOAFaultCode:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOAFaultCode_ns1'
            faultDescription:
              type: string
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              description: A human readable description of the error.
            faultTrace:
              type: string
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              description: "A computer generated dump of the fault (may help\n\t\t\t\t\t\tin
                debugging problems)."
            SOATransactionID:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/SOATransactionID_ns1'
          required:
          - SOAFaultOriginator
          - SOAFaultCode
          description: "The type of the response sent to the calling\n\t\t\t\tapplication,
            if something goes wrong."
          example: |2-

            <vad:getNonDataAllowance_2Fault xmlns:vad="http://soa.o2.co.uk/viewallowancedata_2" xmlns:ns1="http://soa.o2.co.uk/coredata_1">
             <ns1:SOAFaultOriginator><!-- mandatory -->string</ns1:SOAFaultOriginator>
             <ns1:SOAFaultCode><!-- mandatory -->string</ns1:SOAFaultCode>
             <ns1:faultDescription>string</ns1:faultDescription>
             <ns1:faultTrace>string</ns1:faultTrace>
             <ns1:SOATransactionID>string</ns1:SOATransactionID>
            </vad:getNonDataAllowance_2Fault>
        accountType_ns1_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            portalID:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/portalIDType_ns1'
            msisdn:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/msisdnType_ns1'
              description: A msisdn, in international format i.e.,"447712345678"
            accountDetail:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/accountDetail_ns1'
              description: Account Details
          description: "Data type to define a customers account. This could be\n\t\t\t\teither
            a portal account, msisdn, or a companion account\n\t\t\t\tand msisdn.
            Or a Bank Account program ID and account ID\n\t\t\t\t(initially for Timberlake)"
          x-xsi-type: accountType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          x-xsi-type-uniquename: accountType_ns1_vad
        allowanceCategoryType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: string
          enum:
          - MINUTES
          - MESSAGES
          - DATA
          description: A simple type to define the type of allowance to retrieve.
          x-xsi-type: allowanceCategoryType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: allowanceCategoryType_vad
        dataSourceType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: string
          enum:
          - BILLING
          - FUP
          description: "A simple type to define the the source of the allowances.\n\t\t\t
            If this element is not provided then the data allowance\n\t\t\t source
            would be decided based on the data charging category by default."
          x-xsi-type: dataSourceType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: dataSourceType_vad
        productListType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            tariffProductId:
              xml:
                namespace: http://soa.o2.co.uk/viewallowancedata_2
                prefix: vad
              type: string
              description: "Identifies a product - temporarily the same as o2BFID\n\t\t\t\t(and
                hence customer ID)"
            services:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/servicesType_vad'
          required:
          - tariffProductId
          description: "The customer current tariff and the list of services present
            on the account. If this is provided then the customer data charging type
            \n\t\t\twould be determined using the tariff/services combination."
          x-xsi-type: productListType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: productListType_vad
        typeYesOrNo_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: string
          maxLength: 1
          minLength: 1
          enum:
          - "Y"
          - "N"
          description: "Flag indicating whether or not there are outstanding\n\t\t\t\treturns
            on an order (Y/N). Field will be N if no returns\n\t\t\t\thave been requested."
          x-xsi-type: typeYesOrNo
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: typeYesOrNo_vad
        accountAllowancesType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            accountNumber:
              xml:
                namespace: http://soa.o2.co.uk/viewallowancedata_2
                prefix: vad
              type: string
              maxLength: 20
              minLength: 6
              description: "A billing account, as it appears in the back end billing\n\t\t\t\tsystem
                (Companion).;\nThe Companion account number for this number (if\n\t\t\t\t\t\trelevant)."
            allowance:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceType_vad'
          required:
          - accountNumber
          description: Allowances shared across mobiles on an account.
          x-xsi-type: accountAllowancesType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: accountAllowancesType_vad
        msisdnAllowances_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            msisdn:
              xml:
                namespace: http://soa.o2.co.uk/viewallowancedata_2
                prefix: vad
              type: string
              description: "Mobile Phone numbers (MSISDNs) should always be defined\n\t\t\t\tas
                strings, including country codes i.e. \"447734123456\";\n\t\t\t\tand
                translated into localised formats on the\n\t\t\t\tpresentation and
                backend layers.;\nThe mobile phone that the information is about."
            voiceAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/voiceAllowancesType_vad'
            messageAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/messageAllowancesType_vad'
            dataAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/dataAllowances_2Type_vad'
            unlimitedAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/unlimitedAllowancesType_vad'
          required:
          - msisdn
          description: Allowances relevant to MSISDN.
          x-xsi-type: msisdnAllowances
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: msisdnAllowances_vad
        SOAFaultOriginator_ns1:
          xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          type: string
        SOAFaultCode_ns1:
          xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          type: string
        SOATransactionID_ns1:
          xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          type: string
        msisdnLevelDataAllowancesType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            msisdn:
              xml:
                namespace: http://soa.o2.co.uk/viewallowancedata_2
                prefix: vad
              type: string
              description: "Mobile Phone numbers (MSISDNs) should always be defined\n\t\t\t\tas
                strings, including country codes i.e. \"447734123456\";\n\t\t\t\tand
                translated into localised formats on the\n\t\t\t\tpresentation and
                backend layers.;\nThe mobile phone that the information is about."
            dataAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/dataAllowancesType_vad'
            dataAllowancesByBundleType:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/dataAllowancesByBundleTypeType_vad'
          required:
          - msisdn
          description: Allowances relevant to MSISDN.
          x-xsi-type: msisdnLevelDataAllowancesType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: msisdnLevelDataAllowancesType_vad
        msisdnLevelNonDataAllowancesType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            msisdn:
              xml:
                namespace: http://soa.o2.co.uk/viewallowancedata_2
                prefix: vad
              type: string
              description: "Mobile Phone numbers (MSISDNs) should always be defined\n\t\t\t\tas
                strings, including country codes i.e. \"447734123456\";\n\t\t\t\tand
                translated into localised formats on the\n\t\t\t\tpresentation and
                backend layers.;\nThe mobile phone that the information is about."
            voiceAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/voiceAllowancesType_vad'
            messageAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/messageAllowancesType_vad'
            unlimitedAllowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/unlimitedAllowancesType_vad'
          required:
          - msisdn
          description: Allowances relevant to MSISDN.
          x-xsi-type: msisdnLevelNonDataAllowancesType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: msisdnLevelNonDataAllowancesType_vad
        accountAllowances_2Type_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            allowance:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowance_2Type_vad'
              minItems: 1
              description: Complex structure holding allowance details.
          required:
          - allowance
          description: Allowances shared across mobiles on an account.
          x-xsi-type: accountAllowances_2Type
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: accountAllowances_2Type_vad
        msisdnAllowances_2Type_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            msisdn:
              xml:
                namespace: http://soa.o2.co.uk/viewallowancedata_2
                prefix: vad
              type: string
              description: "Mobile Phone numbers (MSISDNs) should always be defined\n\t\t\t\tas
                strings, including country codes i.e. \"447734123456\";\n\t\t\t\tand
                translated into localised formats on the\n\t\t\t\tpresentation and
                backend layers.;\nThe mobile phone that the information is about."
            allowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowancesType_vad'
          required:
          - msisdn
          description: Allowances relevant to MSISDN.
          x-xsi-type: msisdnAllowances_2Type
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: msisdnAllowances_2Type_vad
        msisdnNonDataAllowances_2Type_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            msisdn:
              xml:
                namespace: http://soa.o2.co.uk/viewallowancedata_2
                prefix: vad
              type: string
              description: "Mobile Phone numbers (MSISDNs) should always be defined\n\t\t\t\tas
                strings, including country codes i.e. \"447734123456\";\n\t\t\t\tand
                translated into localised formats on the\n\t\t\t\tpresentation and
                backend layers.;\nThe mobile phone that the information is about."
            allowances:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowances_2Type_vad'
          required:
          - msisdn
          description: Non data allowances relevant to MSISDN.
          x-xsi-type: msisdnNonDataAllowances_2Type
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: msisdnNonDataAllowances_2Type_vad
        portalIDType_ns1:
          xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          type: string
          description: "The portal account username (i.e., Portal ID). \n\t\t\t\tA
            portal account is normally of the form “john.smith@o2.co.uk\". \n\t\t\t\tThe
            Portal ID in this example is \"john.smith\" and the domain is \"o2.co.uk\"."
          x-xsi-type: portalIDType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          x-xsi-type-uniquename: portalIDType_ns1
        msisdnType_ns1:
          xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          type: string
          description: "Mobile Phone numbers (MSISDNs) should always be defined\n\t\t\t\tas
            strings, including country codes i.e. \"447734123456\";\n\t\t\t\tand translated
            into localised formats on the\n\t\t\t\tpresentation and backend layers."
          x-xsi-type: msisdnType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          x-xsi-type-uniquename: msisdnType_ns1
        accountDetail_ns1:
          xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          type: object
          properties:
            billingAccountType:
              xml:
                namespace: http://soa.o2.co.uk/coredata_1
                prefix: ns1
              type: string
              enum:
              - MOBILE
              description: "The type of account as it is defined in the\n\t\t\t\t\t\tbilling
                system (only \"MOBILE\" currently\n\t\t\t\t\t\tdefined)."
            accountNumber:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/billingAccountNumberType_ns1'
              description: The companion account.
            msisdn:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/msisdnType_ns1'
              description: The msisdn within the above account.
          required:
          - billingAccountType
          - accountNumber
          - msisdn
          description: Account Details
          x-xsi-type: accountDetail
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          x-xsi-type-uniquename: accountDetail_ns1
        servicesType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            productId:
              type: array
              items:
                xml:
                  namespace: http://soa.o2.co.uk/viewallowancedata_2
                  prefix: vad
                type: string
                description: "Identifies a product - temporarily the same as o2BFID\n\t\t\t\t(and
                  hence customer ID)"
              minItems: 1
          required:
          - productId
          description: A list of services availalbe on the customer current tariff.
          x-xsi-type: servicesType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: servicesType_vad
        allowanceType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            productCode:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/productCode_vad'
            productName:
              type: string
              description: Marketing name of the product providing the allowance.
            productType:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/productType_vad'
            productDescription:
              type: string
              description: "Textual description of the product. Typically includes\n\t\t\t\t\t\tthe
                number and type of allowances included with the\n\t\t\t\t\t\tproduct."
            expiryDate:
              type: string
              format: date
              description: Date on which the allowance expires.
            suspended:
              type: boolean
              description: "Flag indicating whether the product (and by implication\n\t\t\t\t\t\tthe
                allowances provided by the product) are temporarily\n\t\t\t\t\t\tsuspended.
                This may be due (for example) to insufficient\n\t\t\t\t\t\tbalance
                to recharge the allowance. If the element is not\n\t\t\t\t\t\tincluded
                the product (and allowances) are currently\n\t\t\t\t\t\tactive."
            allowanceDetail:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceDetailType_vad'
              description: "Numerical descriptions of allowances delivered as part\n\t\t\t\t\t\tof
                a product. If there are no elements, and a\n\t\t\t\t\t\tproductDescription
                element exists, then the description\n\t\t\t\t\t\tshould be used instead."
            allowanceText:
              type: string
              description: "This field can be used as an alternative to displaying\n\t\t\t\t\t\tallowanceDetail
                elements if it is supplied."
          required:
          - productName
          - productType
          - expiryDate
          - allowanceDetail
          description: A set of allowances that are included as part of a "product".
          x-xsi-type: allowanceType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: allowanceType_vad
        voiceAllowancesType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            totalAllowanceSummary:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceSummaryType_vad'
            allowance:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceType_vad'
              minItems: 1
          required:
          - totalAllowanceSummary
          - allowance
          description: "Allowances related to voice. Provides an overall initial\n\t\t\t\tand
            remaining allowances and also a break down of each\n\t\t\t\tallowance"
          x-xsi-type: voiceAllowancesType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: voiceAllowancesType_vad
        messageAllowancesType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            totalAllowanceSummary:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceSummaryType_vad'
            allowance:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceType_vad'
              minItems: 1
          required:
          - totalAllowanceSummary
          - allowance
          description: "Allowances related to message that includes SMS and MMS.\n\t\t\t\tProvides
            an overall initial and remaining allowances and\n\t\t\t\talso a break
            down of each allowance"
          x-xsi-type: messageAllowancesType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: messageAllowancesType_vad
        dataAllowances_2Type_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            totalAllowanceSummary:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/dataAllowanceSummaryType_vad'
            allowance:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceType_vad'
            dataAllowancesByBundleType:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/dataAllowancesByBundleTypeType_vad'
          description: "Allowances related to data in KB. Provides an overall\n\t\t\t\tinitial
            and remaining allowances and also a break down of\n\t\t\t\teach allowance"
          x-xsi-type: dataAllowances_2Type
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: dataAllowances_2Type_vad
        unlimitedAllowancesType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            allowance:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceType_vad'
              minItems: 1
          required:
          - allowance
          description: All the unlimited Allowances related to Voice, Text and Data.
          x-xsi-type: unlimitedAllowancesType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: unlimitedAllowancesType_vad
        dataAllowancesType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            totalAllowanceSummary:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/dataAllowanceSummaryType_vad'
            allowance:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceType_vad'
          description: "Allowances related to data in KB. Provides an overall\n\t\t\t\tinitial
            and remaining allowances and also a break down of\n\t\t\t\teach allowance"
          x-xsi-type: dataAllowancesType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: dataAllowancesType_vad
        dataAllowancesByBundleTypeType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            dataBundle:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/dataBundleType_vad'
              minItems: 1
          required:
          - dataBundle
          x-xsi-type: dataAllowancesByBundleTypeType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: dataAllowancesByBundleTypeType_vad
        allowance_2Type_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            productId:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/productCode_vad'
            allowanceName:
              type: string
              description: Marketing name of the product providing the allowance.
            allowanceUnit:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceUnitType_vad'
            shortDescription:
              type: string
              description: Short textual description of the product.
            longDescription:
              type: string
              description: Long textual description of the product.
            isRestricted:
              type: boolean
            restrictionCategory:
              type: string
            isUnlimited:
              type: boolean
            expiryDate:
              type: string
              format: date
              description: Date on which the allowance expires.
            orderIndex:
              type: number
              description: Describes the order in which the allowance need to displayed.
            allowanceUsageSummary:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceUsageSummaryType_vad'
          required:
          - allowanceName
          - allowanceUnit
          - shortDescription
          - longDescription
          - isRestricted
          - restrictionCategory
          - isUnlimited
          - expiryDate
          - orderIndex
          description: A set of allowances that are included as part of a "product".
          x-xsi-type: allowance_2Type
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: allowance_2Type_vad
        allowancesType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            allowance:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowance_2Type_vad'
              description: Complex structure holding allowance details.
            fairUsageAllowances:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/fairUsageAllowancesType_vad'
          description: Allowances relevant to MSISDN.
          x-xsi-type: allowancesType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: allowancesType_vad
        allowances_2Type_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            allowance:
              type: array
              items:
                $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowance_2Type_vad'
              minItems: 1
              description: Complex structure holding allowance details.
          required:
          - allowance
          description: Fair usage and non-fair usage allowances relevant to MSISDN.
          x-xsi-type: allowances_2Type
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: allowances_2Type_vad
        billingAccountNumberType_ns1:
          xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          type: string
          maxLength: 20
          minLength: 6
          description: "A billing account, as it appears in the back end billing\n\t\t\t\tsystem
            (Companion)."
          x-xsi-type: billingAccountNumberType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/coredata_1
            prefix: ns1
          x-xsi-type-uniquename: billingAccountNumberType_ns1
        productCode_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: string
          maxLength: 20
          description: "System ID for the product, to aid aggregation (not available
            for\n\t\t\t\tall products)."
          x-xsi-type: productCode
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: productCode_vad
        productType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: string
          enum:
          - TARIFF
          - BOLT-ON
          - TREAT
          - OTHER
          description: The type of allowance (tarrif / bolt-on/ treat)
          x-xsi-type: productType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: productType_vad
        allowanceDetailType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            allowanceSummary:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceSummaryType_vad'
            allowanceUnit:
              $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceUnitType_vad'
            restricted:
              type: boolean
              description: "Indicates whether there are any restrictions on the use\n\t\t\t\t\t\tof
                the units (e.g. off-peak, week-ends only, on-net\n\t\t\t\t\t\tonly)."
          required:
          - allowanceSummary
          - allowanceUnit
          description: Used to denote a product that gives a user an allowance.
          x-xsi-type: allowanceDetailType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: allowanceDetailType_vad
        allowanceSummaryType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            startingBalance:
              type: number
              description: Total initial number of unit provided by the product.
              xml:
                prefix: vad
                namespace: http://soa.o2.co.uk/viewallowancedata_2
            allowanceUsed:
              type: number
              description: Total number of units used in the current month.
              xml:
                prefix: vad
                namespace: http://soa.o2.co.uk/viewallowancedata_2
            allowanceRemaining:
              type: number
              description: Total number of units available to use.
              xml:
                prefix: vad
                namespace: http://soa.o2.co.uk/viewallowancedata_2
          required:
          - startingBalance
          - allowanceUsed
          description: Provides the total of allowances summary.
          x-xsi-type: allowanceSummaryType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: allowanceSummaryType_vad
          x-ibm-discriminator: true
        dataAllowanceSummaryType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          allOf:
          - $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceSummaryType_vad'
          - xml:
              namespace: http://soa.o2.co.uk/viewallowancedata_2
              prefix: vad
            type: object
            properties:
              dataThresholdType:
                type: string
                xml:
                  namespace: http://soa.o2.co.uk/viewallowancedata_2
                  prefix: vad
                description: "The data allowance threshold category. \n\t\t\t\t\t\t\tExample
                  values are:DomesticM,DomesticD,EuQuota,RoWQuota."
              startDate:
                type: string
                format: date-time
                xml:
                  namespace: http://soa.o2.co.uk/viewallowancedata_2
                  prefix: vad
                description: The allowance start date.
              renewalDate:
                type: string
                format: date
                xml:
                  namespace: http://soa.o2.co.uk/viewallowancedata_2
                  prefix: vad
                description: The allowance renewal date.
              timestamp:
                type: string
                format: date-time
                xml:
                  namespace: http://soa.o2.co.uk/viewallowancedata_2
                  prefix: vad
                description: The date and time in which the allowance retrieved was
                  valid.
          description: Provides the total of data allowances summary.
          x-xsi-type: dataAllowanceSummaryType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: dataAllowanceSummaryType_vad
        dataBundleType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            bundleType:
              type: string
            startingAllowance:
              type: number
            allowanceUsed:
              type: number
            allowanceRemaining:
              type: number
            expiryDate:
              type: string
              format: date
          required:
          - bundleType
          - startingAllowance
          x-xsi-type: dataBundleType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: dataBundleType_vad
        allowanceUnitType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: string
          enum:
          - SECOND
          - MESSAGE
          - KB
          - MMS
          - SMS
          description: The unit of measurement for the allowence.
          x-xsi-type: allowanceUnitType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: allowanceUnitType_vad
        allowanceUsageSummaryType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          type: object
          properties:
            startingBalance:
              type: number
              description: Total initial number of unit provided by the product.
            allowanceUsed:
              type: number
              description: Total number of units used in the current month.
            allowanceRemaining:
              type: number
              description: Total number of units available to use.
          required:
          - startingBalance
          - allowanceUsed
          description: Provides the summary of allowances usage.
          x-xsi-type: allowanceUsageSummaryType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: allowanceUsageSummaryType_vad
        fairUsageAllowancesType_vad:
          xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          allOf:
          - $ref: '#/x-ibm-configuration/targets/ViewAllowanceService/definitions/allowanceSummaryType_vad'
          - xml:
              namespace: http://soa.o2.co.uk/viewallowancedata_2
              prefix: vad
            type: object
            properties:
              thresholdType:
                type: string
                xml:
                  namespace: http://soa.o2.co.uk/viewallowancedata_2
                  prefix: vad
                description: "The data allowance threshold category. \n\t\t\t\t\t\t\tExample
                  values are:DomesticM,DomesticD,EuQuota,RoWQuota."
              startDate:
                type: string
                format: date-time
                xml:
                  namespace: http://soa.o2.co.uk/viewallowancedata_2
                  prefix: vad
                description: The allowance start date.
              renewalDate:
                type: string
                format: date
                xml:
                  namespace: http://soa.o2.co.uk/viewallowancedata_2
                  prefix: vad
                description: The allowance renewal date.
              timestamp:
                type: string
                format: date-time
                xml:
                  namespace: http://soa.o2.co.uk/viewallowancedata_2
                  prefix: vad
                description: The date and time in which the allowance retrieved was
                  valid.
          description: Provide fair usage allowances summary.
          x-xsi-type: fairUsageAllowancesType
          x-xsi-type-xml:
            namespace: http://soa.o2.co.uk/viewallowancedata_2
            prefix: vad
          x-xsi-type-uniquename: fairUsageAllowancesType_vad
  assembly:
    execute:
    - gatewayscript:
        version: 1.0.0
        title: GS-ExtractInputLoggingData
        description: This GW Script will extract input metadata for logging
        source: "/* *************************************************************************************************************
          */\n/* *************************************************************************************************************
          */\n/* FileName                      Version    Created By                  Modified
          By               Date           */\n/* ExtractInputLoggingData.js    1.0
          \       Dinesh Tomar                                          06-July-2018
          \  */\n/*                                                                                                               */\n/*
          *************************************************************************************************************
          */\n/* Purpose: This GW Script will extract input metadata for logging                                               */\n/*
          \                                                                                                              */\n/*
          Required params:                                                                                              */\n/*
          ***************************************************************************************************************/\n//Extract
          general metadata from system variables\nvar apiStartTimeMS = (new Date()).getTime();\napim.setvariable('apiStartTimeMS',
          apiStartTimeMS);\nvar systemDateTime = apim.getvariable('system.datetime');\nvar
          apicTxId = \"\";\nif (apim.getvariable('request.headers.apic-transaction-id')){\n
          \   apicTxId = apim.getvariable('request.headers.apic-transaction-id');\n}\nelse
          {\n    apicTxId = uuidv4();\n}\napim.setvariable('apic-transaction-id',
          apicTxId);\napim.setvariable('message.headers.apic-transaction-id', apicTxId);\n\nvar
          xGlobalTxId = apim.getvariable('request.headers.x-global-transaction-id');\n\n//Extract
          client metadata from system variables\nvar clientIPAddress = apim.getvariable('request.headers.x-client-ip');\nvar
          clientId = apim.getvariable('client.app.id');\nvar clientAppName = apim.getvariable('client.app.name');\nvar
          clientAppType = apim.getvariable('client.app.type');\nvar clientOrgName
          = apim.getvariable('client.org.name');\n\n//Extract api metadata from system
          variables\nvar apiName = apim.getvariable('api.name');\nvar apiVersion =
          apim.getvariable('api.version');\nvar providerOrgName = apim.getvariable('api.org.name');\nvar
          catalogName = apim.getvariable('env.path');\nvar apiBasePath = apim.getvariable('api.root');\nvar
          operationPath = apim.getvariable('api.operation.path');\n\n\n//Extract product
          metadata from system variables\n//var productName = apim.getvariable('product.name');\n//var
          productVersion = apim.getvariable('product.version');\nvar planName = apim.getvariable('plan.name');\nvar
          planVersion = apim.getvariable('plan.version');\nvar planRateLimit = apim.getvariable('plan.rate-limit');\n\n//Extract
          request metadata from system variables\nvar requestMethod = apim.getvariable('request.verb');\nvar
          requestURI = apim.getvariable('request.uri');\nvar requestHeaders = apim.getvariable('request.headers');\n\ndelete
          requestHeaders['accept-encoding'];\ndelete requestHeaders['x-global-transaction-id'];\ndelete
          requestHeaders['user-agent'];\ndelete requestHeaders['via'];\ndelete requestHeaders['x-authcode'];\ndelete
          requestHeaders['authorization'];\n\nvar requestHeadersString = JSON.stringify(requestHeaders);\n\nvar
          logString = \"type:=request\"\n                + \" | system-datetime:=\"
          +        systemDateTime\n                + \" | apic-transaction-id:=\"
          +    apicTxId\n                + \" | global-transaction-id:=\" +  xGlobalTxId\n
          \               + \" | consumer-ip-address:=\" +    clientIPAddress\n                +
          \" | x-ibm-client-id:=\" +        clientId\n                + \" | client-app-name:=\"
          +        clientAppName\n                + \" | client-app-type:=\" +        clientAppType\n
          \               + \" | client-org-name:=\" +        clientOrgName\n                +
          \" | api-name:=\" +               apiName\n                + \" | api-version:=\"
          +            apiVersion\n                + \" | provider-org-name:=\" +
          \     providerOrgName\n                + \" | catalog-name:=\" +           catalogName\n
          \               + \" | api-base-path:=\" +          apiBasePath\n                +
          \" | operation-path:=\" +         operationPath\n                + \" |
          plan-name:=\" +              planName\n                + \" | plan-version:=\"
          +           planVersion\n                + \" | plan-rate-limit:=\" +        planRateLimit\n
          \               + \" | request-http-method:=\" +    requestMethod\n                +
          \" | request-uri:=\" +            requestURI\n                + \" | request-http-headers:=\"
          +   requestHeadersString;\n                \nconsole.log(logString);\nlogString
          = \"\";\napim.setvariable('logString', logString);\n\nfunction uuidv4()
          {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function
          (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r: (r & 0x3
          | 0x8);\n        return v.toString(16);\n    });\n}"
    - activity-log:
        version: 1.0.0
        title: Log:Payload
        content: payload
        error-content: payload
    - gatewayscript:
        version: 1.0.0
        title: GS:FetchValidationConfig
        description: This GW Script will create URL to fetch validation config for
          all apis
        source: |-
          /* ************************************************************************************************************* */
          /* ************************************************************************************************************* */
          /* FileName                      Version    Created By                  Modified By               Date           */
          /* FetchValidationConfig.js      1.0        Dinesh Tomar                                          04-July-2018   */
          /*                                                                                                               */
          /* ************************************************************************************************************* */
          /* Purpose: This GW Script will create URL to fetch validation config for all apis                               */
          /*                                                                                                               */
          /* Required params:                                                                                              */
          /* ***************************************************************************************************************/
          var clientId = apim.getvariable('client.app.id');
          apim.setvariable('message.headers.x-ibm-client-id', clientId);
          apim.setvariable('message.headers.content-type', 'application/json');
          //form url for to fetch errorConfig JSON
          var orgName = apim.getvariable('api.org.name');
          var catalog = apim.getvariable('env.path');
          apim.setvariable('apicURLPrefix', 'https://0.0.0.0:9443/'+orgName+'/'+catalog);
          var validationConfigURL = apim.getvariable('apicURLPrefix')+'/'+'config/validationconfig';
          apim.setvariable('validationConfigURL', validationConfigURL);

          //record time in ms just before the invoke policy
          apim.setvariable('startTimeMS', (new Date()).getTime());
          apim.setvariable('policyName', 'Invoke-ValidationConfig');
    - invoke:
        version: 1.0.0
        title: Invoke-ValidationConfig
        timeout: 60
        verb: GET
        cache-response: protocol
        cache-ttl: 900
        description: Load all messages  and properties in context
        target-url: $(validationConfigURL)
        output: validationConfig
    - gatewayscript:
        version: 1.0.0
        title: GS:ValidateParams
        description: This GW Script file will return all API configurations to be
          used for validating input params
        source: "/* **********************************************************************************************************
          */\n/* **********************************************************************************************************
          */\n/* FileName                   Version    Created By                  Modified
          By               Date           */\n/* ValidateParams.js          1.0        Dinesh
          Tomar                                          03-July-2018   */\n/*                                                                                                            */\n/*
          **********************************************************************************************************
          */\n/* Purpose: This GW Script file will return all API configurations to
          be used for validating input params     */\n/*                                                                                                            */\n/*
          Required params:                                                                                           */\n/*
          ************************************************************************************************************/\n\n//record
          time in ms just after the invoke policy\nvar endTimeMS = (new Date()).getTime();\nvar
          timeTakenByPreviousPolicy = endTimeMS - apim.getvariable('startTimeMS');\nvar
          logString = apim.getvariable('logString');\n\nvar validationConfig = apim.getvariable('validationConfig.body');\nif
          (apim.getvariable('message.status.code') != 200) {\n    apim.setvariable('errorName',
          'BackendError');\n    var errorPropertyName = 'other-backend-error';\n    logString
          += \" | error-scenario:=\" + errorPropertyName;\n    apim.setvariable('logString',
          logString);\n    apim.setvariable('error-message', apim.getvariable(errorPropertyName));\n
          \   apim.error('BackendError', apim.getvariable('message.status.code'),
          'Internal Error', apim.getvariable('error-message'));\n}\nelse {\n    logString
          += \" | \" + apim.getvariable('policyName') + \" := \" + timeTakenByPreviousPolicy
          + \" ms\";\n    apim.setvariable('logString', logString);\n    var apiName
          = apim.getvariable('api.name');\n    var operationName = apim.getvariable('api.operation.path');\n
          \   var apiConfig = validationConfig.apisConfig[apiName][operationName];\n
          \   var paramsConfig = validationConfig.paramsConfig;\n    var requiredPathParams
          = apiConfig.requiredPathParams;\n    var requiredQueryParams = apiConfig.requiredQueryParams;\n
          \   var requiredHeaderParams = apiConfig.requiredHeaderParams;\n    validateRequiredParams('headers',
          requiredHeaderParams, paramsConfig);\n    validateRequiredParams('parameters',
          requiredQueryParams, paramsConfig);\n    validateRequiredParams('parameters',
          requiredPathParams, paramsConfig);\n    //record time in ms just before
          the invoke policy\n    apim.setvariable('startTimeMS', (new Date()).getTime());\n
          \   apim.setvariable('policyName', 'Invoke-PropertiesHandler');\n}\n\nfunction
          validateRequiredParams(paramType, requiredParams, paramsConfig){\n    if
          (requiredParams !== \"\"){\n        var reqParams = requiredParams.split('|');\n
          \       for (var i = 0; i < reqParams.length; i++){\n            var paramConfig
          = paramsConfig[reqParams[i]];\n            var inputParam = apim.getvariable('request.'+paramType+'.'+reqParams[i]);\n
          \           var nullValidation = ((inputParam != undefined) || (inputParam
          != null));\n            if (nullValidation){\n                var dataTypeValidation
          = true;\n                dataTypeValidation = validateDataType(inputParam,
          paramConfig);\n                var lengthValidation = true;\n                var
          allowedValuesValidation = true;\n                if (paramConfig.manLength
          || paramConfig.maxLength){\n                    lengthValidation = validateLength(inputParam,
          paramConfig);\n                }\n                if (paramConfig.allowedValues){\n
          \                   allowedValuesValidation = validateAllowedValues(inputParam,
          paramConfig);\n                }\n                if (!(dataTypeValidation)
          || !(lengthValidation) || !(allowedValuesValidation)){\n                    apim.setvariable('errorName',
          paramConfig.validationErrorName);\n                    apim.error(paramConfig.validationErrorName,
          paramConfig.validationErrorCode, 'Internal Error', paramConfig.validationErrorMessage);\n
          \                   return;\n                }\n                else {\n
          \                   apim.setvariable('message.headers.'+reqParams[i], inputParam);\n
          \                   var clientId = apim.getvariable('client.app.id');\n
          \                   apim.setvariable('message.headers.x-ibm-client-id',
          clientId);\n                    apim.setvariable('message.headers.content-type',
          'application/json');\n                    //form url for to fetch properties
          config JSON\n                    var configPropertiesURL = apim.getvariable('apicURLPrefix')+'/'+'config/properties';\n
          \                   apim.setvariable('configPropertiesURL', configPropertiesURL);\n
          \               }\n            }\n            else {\n                apim.setvariable('errorName',
          paramConfig.validationErrorName);\n                apim.error(paramConfig.validationErrorName,
          paramConfig.validationErrorCode, 'Internal Error', paramConfig.validationErrorMessage);\n
          \               return;\n            }\n            \n        }\n    }\n}\n\nfunction
          validateDataType(inputParam, paramConfig){\n    if (paramConfig.dataType
          == 'number'){\n        return !(isNaN(parseInt(inputParam)));\n    }\n    else
          if (paramConfig.dataType == 'email'){ \n        if (inputParam.includes('.')
          && inputParam.includes('@') && (! inputParam.includes(' ')))\n            return
          true;\n        else\n            return false;\n    }\n    else if (paramConfig.dataType
          == 'string'){\n        if (inputParam != null && inputParam.length != 0)\n
          \           return true;\n        else\n            return false;\n    }\n
          \   else if (paramConfig.dataType == 'version'){\n        if (inputParam
          == null || inputParam.length == 0)\n            return false;\n        else
          if (inputParam.includes('.')) {\n            var splittedArray = inputParam.split('.');\n
          \           var result = true;\n            for (var i = 0; i < splittedArray.length;
          i++){\n                if (isNaN(parseInt(splittedArray[i]))){\n                    result
          = false;\n                    return result;\n                }\n            }\n
          \           return result;\n        }\n        else{\n            return
          !(isNaN(parseInt(inputParam)));\n        }\n    }\n    else\n        return
          true;\n}\n\nfunction validateLength(inputParam, paramConfig){\n    var minLength
          = paramConfig.minLength;\n    var maxLength = paramConfig.maxLength;\n    if
          ((inputParam.length >= minLength) && (inputParam.length <= maxLength))\n
          \       return true;\n    else\n        return false;\n}\n\nfunction validateAllowedValues(inputParam,
          paramConfig){\n    var allowedValues = paramConfig.allowedValues;\n    var
          allowedValuesArray = allowedValues.split('|');\n    var result = false;\n
          \   for (var i = 0; i < allowedValuesArray.length; i++){\n        if (allowedValuesArray[i]
          == inputParam){\n            result = true;\n            return result;\n
          \       }\n    }\n    return result;\n}\n\nfunction isJSONEmpty(jsonObject)
          {\n    var member;\n    var result = true;\n    for (member in jsonObject)
          {\n        if (jsonObject[member] != null) {\n            result = false;\n
          \       }\n    }\n    return result;\n}"
    - invoke:
        title: Invoke-PropertiesHandler
        timeout: 60
        verb: GET
        cache-response: protocol
        cache-ttl: 900
        version: 1.0.0
        target-url: $(configPropertiesURL)
        output: Properties
        description: Load all messages and properties in context
    - gatewayscript:
        title: GS:GetAccessTokenandDisambiguitionId
        version: 1.0.0
        source: "/* ***********************************************************************************************************************
          */\r\n/* ***********************************************************************************************************************
          */\r\n/* FileName                                Version    Created By                  Modified
          By               Date           */\r\n/* GetAccessToken.js                       1.0
          \       Dinesh Tomar                                          08-May-2018
          \   */\r\n/*                                                                                                                         */\r\n/*
          ***********************************************************************************************************************
          */\r\n/* Purpose: This GW Script file will create request to get access
          token for the auth code received                         */\r\n/*                                                                                                                         */\r\n/*
          Required params:                                                                                                        */\r\n/*
          ***********************************************************************************************************************
          */\r\n\r\n//record time in ms just after the invoke policy\r\nvar endTimeMS
          = (new Date()).getTime();\r\nvar timeTakenByPreviousPolicy = endTimeMS -
          apim.getvariable('startTimeMS');\r\nvar logString = apim.getvariable('logString');\r\n\r\n\r\n//load
          properties configuration from context variable\r\nvar messages = apim.getvariable('Properties.body');\r\n//get
          all headers\r\nvar clientId = apim.getvariable('client.app.id');\r\nvar
          msisdn = apim.getvariable('request.parameters.msisdn');\r\nvar authCode
          = apim.getvariable('request.headers.x-authcode');\r\n//var deviceType =
          apim.getvariable('request.headers.x-device');\r\n//var userId = apim.getvariable('request.headers.x-user-id');\r\n//var
          correlator = apim.getvariable('request.headers.x-correlator');\r\nif (apim.getvariable('message.status.code')
          != 200) {\r\n    apim.setvariable('errorName', 'BackendError');\r\n    var
          errorPropertyName = 'other-backend-error';\r\n    logString += \" | error-scenario:=\"
          + errorPropertyName;\r\n    apim.setvariable('logString', logString);\r\n
          \   apim.setvariable('error-message', apim.getvariable(errorPropertyName));\r\n
          \   apim.error('BackendError', apim.getvariable('message.status.code'),
          'Internal Error', apim.getvariable('error-message'));\r\n} else {\r\n    logString
          += \" | \" + apim.getvariable('policyName') + \" := \" + timeTakenByPreviousPolicy
          + \" ms\";\r\n    apim.setvariable('logString', logString);\r\n    apim.setvariable('message.headers.x-ibm-client-id',
          clientId);\r\n    apim.setvariable('message.headers.msisdn', msisdn);\r\n
          \   apim.setvariable('message.headers.x-authcode', authCode);\r\n    //var
          apicAccessTokenURL = hostName + orgName + '/' + catalog + messages.authserver.generateAccessToken.apicURI;\r\n
          \   var apicDisambiguationIdURL = apim.getvariable('apicURLPrefix') + messages.authserver.generateDisambiguationId.apicURI;\r\n
          \   //apim.setvariable('apicAccessTokenURL', apicAccessTokenURL);\r\n    apim.setvariable('apicDisambiguationIdURL',
          apicDisambiguationIdURL);\r\n    \r\n    //record time in ms just before
          the invoke policy\r\n    apim.setvariable('startTimeMS', (new Date()).getTime());\r\n
          \   apim.setvariable('policyName', 'Invoke-GetAccessTokenandDisambiguationId');\r\n}\r\n\r\nfunction
          isJSONEmpty(jsonObject) {\r\n    var member;\r\n    var result = true;\r\n
          \   for (member in jsonObject) {\r\n        if (jsonObject[member] != null)
          {\r\n            result = false;\r\n        }\r\n    }\r\n    return result;\r\n}"
    - invoke:
        title: Invoke-GetAccessTokenandDisambiguationId
        timeout: 60
        verb: GET
        cache-response: protocol
        cache-ttl: 900
        version: 1.0.0
        target-url: $(apicDisambiguationIdURL)
        output: disambiguationId
    - gatewayscript:
        title: GS:GetPhoneDetails
        version: 1.0.0
        source: "/* ***********************************************************************************************************************
          */\r\n/* ***********************************************************************************************************************
          */\r\n/* FileName                                Version    Created By                  Modified
          By               Date           */\r\n/* GetPhoneDetails.js                      1.0
          \       Dinesh Tomar                                          08-May-2018
          \   */\r\n/*                                                                                                                         */\r\n/*
          ***********************************************************************************************************************
          */\r\n/* Purpose: This GW Script file will create request to get phone details
          \                                                  */\r\n/*                                                                                                                         */\r\n/*
          Required params:                                                                                                        */\r\n/*
          ***********************************************************************************************************************
          */\r\n\r\n//record time in ms just after the invoke policy\r\nvar endTimeMS
          = (new Date()).getTime();\r\nvar timeTakenByPreviousPolicy = endTimeMS -
          apim.getvariable('startTimeMS');\r\nvar logString = apim.getvariable('logString');\r\n\r\n//load
          properties configuration from context variable\r\nvar messages = apim.getvariable('Properties.body');\r\n//get
          access token and Disambiguation Id from context variables\r\n\r\n if (apim.getvariable('message.status.code')
          != 201) {\r\n    apim.setvariable('errorName', 'BackendError');\r\n    var
          errorPropertyName = 'auth-' + apim.getvariable('message.status.code');\r\n
          \   logString += \" | error-scenario:=\" + errorPropertyName;\r\n    apim.setvariable('logString',
          logString);\r\n    apim.setvariable('error-message', apim.getvariable(errorPropertyName));\r\n
          \   apim.error('BackendError', apim.getvariable('message.status.code'),
          'Internal Error', apim.getvariable('error-message'));\r\n} else {\r\n    logString
          += \" | \" + apim.getvariable('policyName') + \" := \" + timeTakenByPreviousPolicy
          + \" \";\r\n    apim.setvariable('logString', logString);\r\n    var accessToken
          = apim.getvariable('disambiguationId.body').access_token;\r\n    var disambiguationId
          = apim.getvariable('disambiguationId.body').disambiguation_id;\r\n    apim.setvariable('message.headers.disambiguation-id',
          disambiguationId);\r\n    apim.setvariable('message.headers.authorization',
          \"Bearer \" + accessToken);\r\n    var phoneDetailsURL = messages.phoneservice.msisdndetails.uri;\r\n
          \   //phoneDetailsURL = phoneDetailsURL.replace('CURRENT', apim.getvariable('message.headers.msisdn'));\r\n
          \   apim.setvariable('phoneDetailsURL', phoneDetailsURL);\r\n    \r\n    //record
          time in ms just before the invoke policy\r\n    apim.setvariable('startTimeMS',
          (new Date()).getTime());\r\n    apim.setvariable('policyName', 'Invoke-GetPhoneDetails');\r\n}\r\n\r\nfunction
          isJSONEmpty(jsonObject) {\r\n    var member;\r\n    var result = true;\r\n
          \   for (member in jsonObject) {\r\n        if (jsonObject[member] != null)
          {\r\n            result = false;\r\n        }\r\n    }\r\n    return result;\r\n}"
    - invoke:
        title: Invoke-GetPhoneDetails
        timeout: 60
        verb: GET
        cache-response: protocol
        cache-ttl: 900
        version: 1.0.0
        target-url: $(phoneDetailsURL)
        output: PhoneDetailsResponse
    - gatewayscript:
        version: 1.0.0
        title: GS:SettingContextVariablesforSOA
        source: "/* ******************************************************************************************************************
          */\r\n/* ******************************************************************************************************************
          */\r\n/* FileName                           Version    Created By                  Modified
          By               Date           */\r\n/* ValidateParameters.js              1.0
          \       Dinesh Tomar                                          25-Apr-2018
          \   */\r\n/*                                                                                                                    */\r\n/*
          ******************************************************************************************************************
          */\r\n/* Purpose: This GW Script file will validate request parameters                                                      */\r\n/*
          \                                                                                                                   */\r\n/*
          Required params:                                                                                                   */\r\n/*
          ******************************************************************************************************************
          */\r\n\r\n//record time in ms just after the invoke policy\r\nvar endTimeMS
          = (new Date()).getTime();\r\nvar timeTakenByPreviousPolicy = endTimeMS -
          apim.getvariable('startTimeMS');\r\nvar logString = apim.getvariable('logString');\r\n\r\n\r\n//load
          properties configuration from context variable\r\nvar messages = apim.getvariable('Properties.body');\r\nvar
          phoneDetails = apim.getvariable('PhoneDetailsResponse.body');\r\n//get all
          input parameters\r\n//var clientId = apim.getvariable('client.app.id');\r\n//var
          msisdn = apim.getvariable('request.parameters.msisdn');\r\n//check all headers
          validation\r\n//if (msisdn == null || msisdn == undefined || isNaN(parseInt(msisdn)))
          {\r\n    //apim.setvariable('errorName', 'InvalidMsisdn');\r\n    //apim.error('InvalidMsisdn',
          500, 'Internal Error', 'Missing or invalid msisdn');\r\nif (apim.getvariable('message.status.code')
          != 200) {\r\n    apim.setvariable('errorName', 'BackendError');\r\n    var
          errorPropertyName = 'phoneservice-'+apim.getvariable('message.status.code');\r\n
          \   logString += \" | error-scenario:=\" + errorPropertyName;\r\n    apim.setvariable('logString',
          logString);\r\n    apim.setvariable('error-message', apim.getvariable(errorPropertyName));\r\n
          \   console.log(JSON.stringify(apim.getvariable('PhoneDetailsResponse')));\r\n
          \   apim.error('BackendError', apim.getvariable('message.status.code'),
          'Internal Error', apim.getvariable('error-message'));\r\n} else {\r\n    logString
          += \" | \" + apim.getvariable('policyName') + \" := \" + timeTakenByPreviousPolicy
          + \" ms\";\r\n    apim.setvariable('logString', logString);\r\n    var accountId
          = phoneDetails.accountId;\r\n    var isRODEnabled = isRODEnabled();\r\n
          \   var returnAllowanceByBundleType = null;\r\n    if (isRODEnabled == \"true\")
          {\r\n        returnAllowanceByBundleType = 'Y';\r\n    } else {\r\n        returnAllowanceByBundleType
          = 'N';\r\n    }\r\n    apim.setvariable('returnAllowanceByBundleType', returnAllowanceByBundleType);\r\n
          \   apim.setvariable('accountId', accountId);\r\n    //apim.setvariable('message.headers.x-ibm-client-id',
          clientId);\r\n    //apim.setvariable('message.headers.msisdn', msisdn);\r\n
          \   apim.setvariable('soaViewAllowanceEndpoint', messages.soa.getViewAllowance_2_0.uri);\r\n}\r\nfunction
          isRODEnabled() {\r\n    \r\n    var value = messages.feature.dataallowance.breakdown;\r\n
          \   //apim.setvariable('message.headers.value', value);\r\n    if (value
          != null) {\r\n        return value;\r\n    } else {\r\n        return true;\r\n
          \   }\r\n}\r\nfunction isJSONEmpty(jsonObject) {\r\n    var member;\r\n
          \   var result = true;\r\n    for (member in jsonObject) {\r\n        if
          (jsonObject[member] != null) {\r\n            result = false;\r\n        }\r\n
          \   }\r\n    return result;\r\n}"
    - xslt:
        version: 1.0.0
        title: XSLT:SOARequest
        input: false
        source: "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n
          \   xmlns:dp=\"http://www.datapower.com/extensions\" xmlns:func=\"http://exslt.org/functions\"\r\n
          \   xmlns:apim=\"http://www.ibm.com/apimanagement\" extension-element-prefixes=\"dp
          func apim\">\r\n    <xsl:import href=\"local:///isp/policy/apim.custom.xsl\"/>\r\n
          \   <xsl:output method=\"xml\" omit-xml-declaration=\"yes\" indent=\"yes\"/>\r\n
          \   <xsl:strip-space elements=\"*\"/>\r\n    <xsl:template match=\"/\">\r\n
          \       <xsl:call-template name=\"apim:setVariable\">\r\n            <xsl:with-param
          name=\"varName\" select=\"'message.headers.content-type'\"/>\r\n            <xsl:with-param
          name=\"value\" select=\"'application/xml'\"/>\r\n        </xsl:call-template>\r\n
          \       <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n
          \           <soap:Header xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n
          \               <wsse:Security\r\n                    xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\">\r\n
          \                   <wsse:UsernameToken>\r\n                        <wsse:Username>apic_123</wsse:Username>\r\n
          \                       <wsse:Password>t3st1ng</wsse:Password>\r\n                    </wsse:UsernameToken>\r\n
          \               </wsse:Security>\r\n            </soap:Header>\r\n            <soapenv:Body>\r\n
          \               <ns2:getDataAllowance_1 xmlns:ns2=\"http://soa.o2.co.uk/viewallowancedata_2\"\r\n
          \                   xmlns:ns3=\"http://soa.o2.co.uk/coredata_1\"\r\n                    xmlns:S=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n
          \                   <ns2:account>\r\n                        <ns3:accountDetail>\r\n
          \                           <ns3:billingAccountType>MOBILE</ns3:billingAccountType>\r\n
          \                           <ns3:accountNumber>\r\n                                <xsl:value-of
          select=\"apim:getVariable('accountId')\"/>\r\n                            </ns3:accountNumber>\r\n
          \                           <ns3:msisdn>\r\n                                <xsl:value-of
          select=\"apim:getContext('request.parameters.msisdn')\"\r\n                                />\r\n
          \                           </ns3:msisdn>\r\n                        </ns3:accountDetail>\r\n
          \                   </ns2:account>\r\n                    <ns2:returnAllowanceByBundleType>\r\n
          \                       <xsl:value-of select=\"apim:getVariable('returnAllowanceByBundleType')\"/>\r\n
          \                   </ns2:returnAllowanceByBundleType>\r\n                    \r\n
          \               </ns2:getDataAllowance_1>\r\n            </soapenv:Body>\r\n
          \       </soapenv:Envelope>\r\n        <xsl:call-template name=\"apim:setVariable\">\r\n
          \           <xsl:with-param name=\"varName\" select=\"'startTimeMS'\"/>\r\n
          \           <xsl:with-param name=\"value\" select=\"dp:time-value()\"/>\r\n
          \       </xsl:call-template>\r\n        <xsl:call-template name=\"apim:setVariable\">\r\n
          \           <xsl:with-param name=\"varName\" select=\"'policyName'\"/>\r\n
          \           <xsl:with-param name=\"value\" select=\"'Invoke-GetDataAllowanceFromSOA'\"/>\r\n
          \       </xsl:call-template>\r\n    </xsl:template>\r\n</xsl:stylesheet>\r\n"
    - invoke:
        title: Invoke-GetDataAllowanceFromSOA
        target-url: $(soaViewAllowanceEndpoint)
        timeout: 60
        verb: POST
        cache-response: protocol
        cache-ttl: 900
        tls-profile: apic-tls-client-profile:1.0.0
    - xslt:
        version: 1.0.0
        title: XSLT-ExtractSOAFaultCode
        input: false
        source: "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n
          \   xmlns:dp=\"http://www.datapower.com/extensions\"\r\n    xmlns:S=\"http://schemas.xmlsoap.org/soap/envelope/\"\r\n
          \   xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope\"\r\n    xmlns:apim=\"http://www.ibm.com/apimanagement\"
          extension-element-prefixes=\"dp apim\">\r\n    <xsl:import href=\"local:///isp/policy/apim.custom.xsl\"/>\r\n
          \   <xsl:output method=\"xml\" omit-xml-declaration=\"yes\" indent=\"yes\"/>\r\n
          \   <xsl:strip-space elements=\"*\"/>\r\n\r\n    <xsl:template match=\"/\">\r\n
          \       <xsl:variable name=\"input\" select=\"apim:payloadRead()\"/>\r\n
          \       <!--record time in ms just after the invoke policy-->\r\n        <xsl:call-template
          name=\"apim:setVariable\">\r\n            <xsl:with-param name=\"varName\"
          select=\"'endTimeMS'\"/>\r\n            <xsl:with-param name=\"value\" select=\"dp:time-value()\"/>\r\n
          \       </xsl:call-template>\r\n        <xsl:call-template name=\"apim:setVariable\">\r\n
          \           <xsl:with-param name=\"varName\" select=\"'timeTakenByPreviousPolicy'\"/>\r\n
          \           <xsl:with-param name=\"value\"\r\n                select=\"apim:getVariable('endTimeMS')
          - apim:getVariable('startTimeMS')\"/>\r\n        </xsl:call-template>\r\n
          \       <xsl:call-template name=\"apim:setVariable\">\r\n            <xsl:with-param
          name=\"varName\" select=\"'logString'\"/>\r\n            <xsl:with-param
          name=\"value\" select=\"apim:getVariable('logString')\"/>\r\n        </xsl:call-template>\r\n
          \       <xsl:choose>\r\n            <xsl:when test=\"apim:getVariable('message.status.code')
          != '200'\">\r\n                <xsl:call-template name=\"apim:setVariable\">\r\n
          \                   <xsl:with-param name=\"varName\" select=\"'errorName'\"/>\r\n
          \                   <xsl:with-param name=\"value\" select=\"'BackendError'\"/>\r\n
          \               </xsl:call-template>\r\n                <xsl:variable name=\"errorPropertyName\"
          select=\"'other-backend-error'\"/>\r\n\r\n                <xsl:call-template
          name=\"apim:setVariable\">\r\n                    <xsl:with-param name=\"varName\"
          select=\"'logString'\"/>\r\n                    <xsl:with-param name=\"value\"\r\n
          \                       select=\"concat(apim:getVariable('logString'),'
          | error-scenario:=', $errorPropertyName)\"\r\n                    />\r\n
          \               </xsl:call-template>\r\n                <xsl:call-template
          name=\"apim:setVariable\">\r\n                    <xsl:with-param name=\"varName\"
          select=\"'error-message'\"/>\r\n                    <xsl:with-param name=\"value\"
          select=\"$errorPropertyName\"/>\r\n                </xsl:call-template>\r\n
          \               <xsl:call-template name=\"apim:error\">\r\n                    <xsl:with-param
          name=\"httpCode\" select=\"apim:getVariable('message.status.code')\"/>\r\n
          \                   <xsl:with-param name=\"httpReasonPhrase\" select=\"'Internal
          Error'\"/>\r\n                    <xsl:with-param name=\"errorMessage\"
          select=\"apim:getVariable('error-message')\"/>\r\n                </xsl:call-template>\r\n
          \           </xsl:when>\r\n            <xsl:otherwise>\r\n\r\n                <xsl:call-template
          name=\"apim:setVariable\">\r\n                    <xsl:with-param name=\"varName\"
          select=\"'logString'\"/>\r\n                    <xsl:with-param name=\"value\"\r\n
          \                       select=\"concat(apim:getVariable('logString'), '
          | ', apim:getVariable('policyName'), ' := ', apim:getVariable('timeTakenByPreviousPolicy'),
          ' ms')\"\r\n                    />\r\n                </xsl:call-template>\r\n
          \               <xsl:call-template name=\"apim:setVariable\">\r\n                    <xsl:with-param
          name=\"varName\" select=\"'SOAFaultCode'\"/>\r\n                    <xsl:with-param
          name=\"value\"\r\n                        select=\"$input//*[local-name()
          = 'SOAFaultCode']/text()\"/>\r\n                </xsl:call-template>\r\n
          \           </xsl:otherwise>\r\n        </xsl:choose>\r\n    </xsl:template>\r\n</xsl:stylesheet>\r\n"
    - gatewayscript:
        version: 1.0.0
        title: GS-SOAErrorMapping
        source: "/* ***********************************************************************************************************************
          */\r\n/* ***********************************************************************************************************************
          */\r\n/* FileName                                Version    Created By                  Modified
          By               Date           */\r\n/* SOAErrorMapping.js                      1.0
          \      Shalini Chauhan                                       08-Aug-2018
          \    */\r\n/*                                                                                                                         */\r\n/*
          ***********************************************************************************************************************
          */\r\n/* Purpose: This GW Script file will handle SOA errors.                                                                    */\r\n/*
          \                                                                                                                        */\r\n/*
          \                                                                                                                        */\r\n/*
          ***********************************************************************************************************************
          */\r\n\r\nvar SOAError = apim.getvariable('SOAFaultCode');\r\nif (SOAError.length
          != 0) {\r\n    \r\n    //Check SOA reposne\r\n    var errorPropertyName
          = null;\r\n    var code = null;\r\n    var logString = apim.getvariable('logString');\r\n
          \   apim.setvariable('errorName', 'BackendError');\r\n    if (SOAError.toString().includes(\"2501\"))
          {\r\n        apim.setvariable('message.status.code', 500);\r\n        errorPropertyName
          = 'Int_Server_Err';\r\n    } else if (SOAError.toString().includes(\"2502\"))
          {\r\n        apim.setvariable('message.status.code', 504);\r\n        errorPropertyName
          = 'ServiceTimeout';\r\n    } else if (SOAError.toString().includes(\"2503\"))
          {\r\n        apim.setvariable('message.status.code', 500);\r\n        errorPropertyName
          = 'Int_Server_Err';\r\n    } else if (SOAError.toString().includes(\"2504\"))
          {\r\n        apim.setvariable('message.status.code', 500);\r\n        errorPropertyName
          = 'Int_Server_Err';\r\n    } else if (SOAError.toString().includes(\"2506\"))
          {\r\n        apim.setvariable('message.status.code', 500);\r\n        errorPropertyName
          = 'Int_Server_Err';\r\n    } else if (SOAError.toString().includes(\"2000\"))
          {\r\n        apim.setvariable('message.status.code', 500);\r\n        errorPropertyName
          = 'Int_Server_Err';\r\n    } else if (SOAError.toString().includes(\"3999\"))
          {\r\n        apim.setvariable('message.status.code', 500);\r\n        errorPropertyName
          = 'Int_Server_Err';\r\n    } else if (SOAError.toString().includes(\"3601\"))
          {\r\n        apim.setvariable('message.status.code', 404);\r\n        errorPropertyName
          = 'SubscriberNotRecognized';\r\n    } else if (SOAError.toString().includes(\"3602\"))
          {\r\n        apim.setvariable('message.status.code', 404);\r\n        errorPropertyName
          = 'SubscriberNotActive';\r\n    } else if (SOAError.toString().includes(\"3603\"))
          {\r\n        apim.setvariable('message.status.code', 404);\r\n        errorPropertyName
          = 'AccountDisconnected';\r\n    } else if (SOAError.toString().includes(\"3001\"))
          {\r\n        apim.setvariable('message.status.code', 404);\r\n        errorPropertyName
          = 'NetworkInvalid';\r\n    } else if (SOAError.toString().includes(\"3002\"))
          {\r\n        apim.setvariable('message.status.code', 404);\r\n        errorPropertyName
          = 'AccountNotSetup';\r\n    } else if (SOAError.toString().includes(\"3003\"))
          {\r\n        apim.setvariable('message.status.code', 404);\r\n        errorPropertyName
          = 'InvalidPostpay';\r\n    } else if (SOAError.toString().includes(\"4000\"))
          {\r\n        apim.setvariable('message.status.code', 400);\r\n        errorPropertyName
          = 'bad-request';\r\n    } else if (SOAError.toString().includes(\"4501\"))
          {\r\n        apim.setvariable('message.status.code', 400);\r\n        errorPropertyName
          = 'bad-request';\r\n    } else {\r\n        apim.setvariable('message.status.code',
          500);\r\n        errorPropertyName = 'other-backend-error';\r\n    }\r\n
          \   logString += \" | error-scenario:=\" + errorPropertyName;\r\n    apim.setvariable('logString',
          logString);\r\n    apim.setvariable('error-message', apim.getvariable(errorPropertyName));\r\n
          \   apim.error('BackendError', apim.getvariable('message.status.code'),
          'Internal Error', apim.getvariable('error-message'));\r\n}"
    - xslt:
        title: XSLT:ConvertSOAPToXML
        input: true
        version: 1.0.0
        source: "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"
          \r\n    xmlns:dp=\"http://www.datapower.com/extensions\"\r\n    xmlns:S=\"http://schemas.xmlsoap.org/soap/envelope/\"
          \r\n    xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope\"\r\n    xmlns:apim=\"http://www.ibm.com/apimanagement\"
          extension-element-prefixes=\"dp apim\">\r\n    <xsl:output method=\"xml\"
          omit-xml-declaration=\"yes\" indent=\"yes\"/>\r\n    <xsl:strip-space elements=\"*\"/>
          \  \r\n    <xsl:template match=\"@* | node()\">\r\n        <xsl:copy>\r\n
          \           <xsl:apply-templates select=\"@* | node()\"/>\r\n        </xsl:copy>\r\n
          \   </xsl:template>\r\n    <xsl:template match=\"*\">\r\n        <xsl:element
          name=\"{local-name()}\">\r\n            <xsl:apply-templates select=\"child::node()\"/>\r\n
          \       </xsl:element>\r\n    </xsl:template>\r\n</xsl:stylesheet>"
    - xml-to-json:
        title: xml-to-json
        version: 1.0.0
    - gatewayscript:
        title: GS:DataAllowanceResponse
        version: 1.0.0
        source: "/* ***********************************************************************************************************************
          */\r\n/* ***********************************************************************************************************************
          */\r\n/* FileName                                Version    Created By                  Modified
          By               Date           */\r\n/* GetAllowanceData.js                      1.0
          \      Shalini Chauhan                                       17-May-2018
          \   */\r\n/*                                                                                                                         */\r\n/*
          ***********************************************************************************************************************
          */\r\n/* Purpose: This GW Script file will create response for data allowance
          \                                                   */\r\n/*                                                                                                                         */\r\n/*
          \                                                                                                                        */\r\n/*
          ***********************************************************************************************************************
          */\r\n\r\n//set content type\r\napim.setvariable('message.headers.content-type',
          'application/json');\r\n// loading variables\r\nvar phoneDetails = apim.getvariable('PhoneDetailsResponse.body');\r\nvar
          properties = apim.getvariable('Properties.body');\r\nvar alwaysOn = phoneDetails.alwaysOn
          == null ? false: phoneDetails.alwaysOn;\r\n\r\n//initializing variables\r\nvar
          ONE_MB_AS_KB = 1024;\r\nvar ONE_GB_AS_KB = 1048576;\r\nvar DataAllowanceResponse
          = {\r\n};\r\nvar dataThresholdType = null;\r\nvar chargingType = null;\r\nvar
          allowanceUsed = null;\r\nvar startingBalance = null;\r\nvar percentDataUsed
          = 0;\r\nvar checkedChargingType = null;\r\nvar infoMessage = null;\r\nvar
          summaryMessage = null;\r\nvar thresholdPercentage = 0;\r\nvar usageMessage
          = null;\r\nvar allowanceRemaining = null;\r\nvar j = 0;\r\nvar renewalDate
          = null;\r\nvar flag = true;\r\napim.readInputAsJSON(function (error, soaResponseJSON)
          {\r\n    if (error) {\r\n        throw error;\r\n    } else {\r\n            //fetching
          values from properties file and adding them to final response\r\n            DataAllowanceResponse.footer_message
          = properties.msg.dataallowance.footer;\r\n            DataAllowanceResponse.allowance_footer_message
          = properties.msg.allowance.footer;\r\n            var totalAllowanceSummary
          =[];\r\n            var dataAllowanceSummaryType =[];\r\n            //fetching
          value of charging type\r\n            if (ifJsonHasKey(soaResponseJSON.Envelope.Body.getDataAllowance_1Response,
          'chargingType')) {\r\n                chargingType = getChargingType(soaResponseJSON.Envelope.Body.getDataAllowance_1Response.chargingType.$);\r\n
          \           } else {\r\n                chargingType = getChargingType(chargingType);\r\n
          \           }\r\n            DataAllowanceResponse.charging_type = chargingType;\r\n
          \           if (ifJsonHasKey(soaResponseJSON.Envelope.Body.getDataAllowance_1Response,
          'msisdnLevelAllowances')) {\r\n                if (ifJsonHasKey(soaResponseJSON.Envelope.Body.getDataAllowance_1Response.msisdnLevelAllowances,
          'dataAllowances')) {\r\n                    //if dataAllowance and totalAllowanceSummary
          exists in soaResponseJSON\r\n                    if (! isJSONEmpty(soaResponseJSON.Envelope.Body.getDataAllowance_1Response.msisdnLevelAllowances)
          && ! isJSONEmpty(soaResponseJSON.Envelope.Body.getDataAllowance_1Response.msisdnLevelAllowances.dataAllowances)
          && ! isJSONEmpty(soaResponseJSON.Envelope.Body.getDataAllowance_1Response.msisdnLevelAllowances.dataAllowances.totalAllowanceSummary))
          {\r\n                        var dataAllowances = soaResponseJSON.Envelope.Body.getDataAllowance_1Response.msisdnLevelAllowances.dataAllowances;\r\n
          \                       //if totalAllowanceSummary has only one dataAllowance\r\n
          \                       if (!(isJSONEmpty(dataAllowances.totalAllowanceSummary))
          && dataAllowances.totalAllowanceSummary.length == undefined) {\r\n                            totalAllowanceSummary.push(dataAllowances.totalAllowanceSummary);\r\n
          \                       } else if (dataAllowances.totalAllowanceSummary.length
          > 0) {\r\n                            totalAllowanceSummary = soaResponseJSON.Envelope.Body.getDataAllowance_1Response.msisdnLevelAllowances.dataAllowances.totalAllowanceSummary;\r\n
          \                       }\r\n                    }\r\n                    \r\n
          \                   //club the totalAllowanceSummary according to dataThresholdType\r\n
          \                   for (var i = 0; i < totalAllowanceSummary.length; i++)
          {\r\n                        if (ifJsonHasKey(totalAllowanceSummary[i],
          'dataThresholdType')) {\r\n                            dataThresholdType
          = totalAllowanceSummary[i].dataThresholdType.$;\r\n                        }
          else {\r\n                            dataThresholdType = dataThresholdType;\r\n
          \                       }\r\n                        if (dataThresholdType
          == null || dataThresholdType == 'DOMESTIC_DAILY' || dataThresholdType ==
          'DOMESTIC_MONTHLY') {\r\n                            dataAllowanceSummaryType[j]
          = totalAllowanceSummary[i];\r\n                            j++;\r\n                        }\r\n
          \                   }\r\n                    \r\n                    //if
          totalAllowanceSummary is present\r\n                    if (! isJSONEmpty(dataAllowanceSummaryType))
          {\r\n                        //var allowanceSummary =[];\r\n                        //allowanceSummary
          = dataAllowanceSummaryType;\r\n                        for (var i = 0; i
          < dataAllowanceSummaryType.length; i++) {\r\n                            if
          (ifJsonHasKey(dataAllowanceSummaryType[i], 'allowanceUsed')) {\r\n                                \r\n
          \                               allowanceUsed = parseInt(dataAllowanceSummaryType[i].allowanceUsed.$);\r\n
          \                           }\r\n                            if (ifJsonHasKey(dataAllowanceSummaryType[i],
          'startingBalance')) {\r\n                                \r\n                                startingBalance
          = parseInt(dataAllowanceSummaryType[i].startingBalance.$);\r\n                            }\r\n
          \                           percentDataUsed = convertToPercentageUsed(allowanceUsed,
          startingBalance);\r\n                            checkedChargingType = checkChargingType(startingBalance,
          chargingType);\r\n                            infoMessage = properties.msg.dataallowance[checkedChargingType].info;\r\n
          \                           summaryMessage = properties.msg.dataallowance[checkedChargingType].summary;\r\n
          \                           \r\n                            // Check for
          default message\r\n                            if (infoMessage == null)
          {\r\n                                \r\n                                infoMessage
          = properties.msg.dataallowance[ 'default'].info;\r\n                                summaryMessage
          = properties.msg.dataallowance[ 'default'].summary;\r\n                            }\r\n
          \                           if (ifJsonHasKey(dataAllowanceSummaryType[i],
          'renewalDate')) {\r\n                                renewalDate = dataAllowanceSummaryType[i].renewalDate.$;\r\n
          \                           }\r\n                            thresholdPercentage
          = parseInt(properties.dataallowance.threshold);\r\n                            usageMessage
          = getUsageMessage(percentDataUsed, thresholdPercentage, checkedChargingType,
          alwaysOn);\r\n                            //summaryMessage = properties.msg.dataallowance[
          'default'].summary;\r\n                            if (ifJsonHasKey(dataAllowanceSummaryType[i],
          'allowanceRemaining')) {\r\n                                \r\n                                allowanceRemaining
          = parseInt(dataAllowanceSummaryType[i].allowanceRemaining.$);\r\n                            }\r\n
          \                           if (usageMessage == null || usageMessage ==
          \"\" || usageMessage == undefined) {\r\n                                usageMessage
          = null;\r\n                            }\r\n                            if
          (summaryMessage == null || summaryMessage == \"\" || summaryMessage == undefined)
          {\r\n                                summaryMessage = null;\r\n                            }\r\n
          \                           //set all the values to final response\r\n                            \r\n
          \                           if (flag) {\r\n                                flag
          = false;\r\n                                DataAllowanceResponse.allowance_remaining
          = roundDown(convert(allowanceRemaining, flag), 2);\r\n                            }
          else {\r\n                                DataAllowanceResponse.allowance_remaining
          = roundDown(convert(allowanceRemaining, flag), 2);\r\n                            }\r\n
          \                           //DataAllowanceResponse.allowance_remaining
          = roundDown(convert(allowanceRemaining), 2);\r\n                            DataAllowanceResponse.renewal_date
          = formatDate(renewalDate);\r\n                            DataAllowanceResponse.percent_data_used
          = percentDataUsed;\r\n                            DataAllowanceResponse.threshold_percentage
          = thresholdPercentage;\r\n                            if (! flag) {\r\n
          \                               flag = true;\r\n                                DataAllowanceResponse.allowance_used
          = roundup(convert(allowanceUsed, flag), 2);\r\n                            }
          else {\r\n                                DataAllowanceResponse.allowance_used
          = roundup(convert(allowanceUsed, flag), 2);\r\n                            }\r\n
          \                           if (! flag) {\r\n                                flag
          = true;\r\n                                DataAllowanceResponse.starting_balance
          = roundDown(convert(startingBalance, flag), 2);\r\n                            }
          else {\r\n                                DataAllowanceResponse.starting_balance
          = roundDown(convert(startingBalance, flag), 2);\r\n                            }\r\n
          \                           \r\n                            DataAllowanceResponse.usage_info_message
          = infoMessage;\r\n                            DataAllowanceResponse.usage_summary_message
          = summaryMessage;\r\n                            DataAllowanceResponse.usage_message
          = usageMessage;\r\n                        }\r\n                    }\r\n
          \               } else {\r\n                    DataAllowanceResponse.allowance_remaining
          = null;\r\n                    DataAllowanceResponse.renewal_date = null;\r\n
          \                   DataAllowanceResponse.percent_data_used = null;\r\n
          \                   DataAllowanceResponse.threshold_percentage = null;\r\n
          \                   DataAllowanceResponse.allowance_used = null;\r\n                    DataAllowanceResponse.starting_balance
          = null;\r\n                    DataAllowanceResponse.usage_info_message
          = null;\r\n                    DataAllowanceResponse.usage_summary_message
          = null;\r\n                    DataAllowanceResponse.usage_message = null;\r\n
          \               }\r\n                \r\n                //if ROD exists\r\n
          \               if (isRODEnabled()) {\r\n                    updateAllowanceBreakdown(DataAllowanceResponse,
          soaResponseJSON, renewalDate);\r\n                }\r\n            } else
          {\r\n                DataAllowanceResponse.allowance_remaining = null;\r\n
          \               DataAllowanceResponse.renewal_date = null;\r\n                DataAllowanceResponse.percent_data_used
          = null;\r\n                DataAllowanceResponse.threshold_percentage =
          null;\r\n                DataAllowanceResponse.allowance_used = null;\r\n
          \               DataAllowanceResponse.starting_balance = null;\r\n                DataAllowanceResponse.usage_info_message
          = null;\r\n                DataAllowanceResponse.usage_summary_message =
          null;\r\n                DataAllowanceResponse.usage_message = null;\r\n
          \           }\r\n            \r\n            //outputs the final response\r\n
          \           apim.setvariable('message.body', DataAllowanceResponse);\r\n
          \           //apim.setvariable('message.body', DataAllowanceResponse);\r\n
          \   }\r\n});\r\n\r\n\r\n//returns charging type depending on its value\r\nfunction
          getChargingType(chargingType) {\r\n    return chargingType != null ? chargingType:
          'CONS_DATA_CAPPED';\r\n}\r\n\r\n//returns the percentage of used allowance\r\nfunction
          convertToPercentageUsed(allowanceUsed, startingBalance) {\r\n    if ((allowanceUsed
          == null || allowanceUsed <= 0) || (startingBalance == null || startingBalance
          <= 0)) {\r\n        \r\n        return (0).toFixed(1);\r\n    } else if
          (allowanceUsed >= startingBalance) {\r\n        \r\n        return (100).toFixed(1);\r\n
          \   } else {\r\n        var val = parseFloat((allowanceUsed / startingBalance)
          * 100.0);\r\n        if (val.toString().includes('.')) {\r\n            return
          val;\r\n        } else {\r\n            return val.toString() + '.0';\r\n
          \       }\r\n    }\r\n}\r\n\r\n//checks the value of charging type and starting
          balance and accordingly returns the result\r\nfunction checkChargingType(startingBalance,
          chargingType) {\r\n    var balance = startingBalance / 1024;\r\n    if (('CONS_WEB_DAILY'
          == chargingType) && startingBalance != null) {\r\n        \r\n        chargingType
          = 'CONS_WEB_DAILY_' + balance;\r\n    }\r\n    \r\n    return chargingType;\r\n}\r\n\r\n//converts
          incoming integer value in KB/MB/GB\r\nfunction convert(intvalue, flag) {\r\n
          \   \r\n    if (intvalue == null) {\r\n        return null;\r\n    } else
          if (intvalue < 0) {\r\n        return 'Unlimited';\r\n    } else if (intvalue
          < ONE_MB_AS_KB && flag) {\r\n        return intvalue + 'KB';\r\n    } else
          if (intvalue < ONE_GB_AS_KB) {\r\n        return (intvalue / ONE_MB_AS_KB)
          + 'MB';\r\n    } else {\r\n        return (intvalue / ONE_GB_AS_KB) + 'GB';\r\n
          \   }\r\n}\r\n\r\n//returns message from properties file depending on the
          fields passed through parameters\r\nfunction getUsageMessage(percentDataUsed,
          thresholdPercentage, checkedChargingType, alwaysOn) {\r\n    var usageMessage;\r\n
          \   \r\n    if (parseInt(percentDataUsed) >= 100) {\r\n        if (alwaysOn.toString()
          == 'true') {\r\n            usageMessage = properties.msg.dataallowance.alwayson.over;\r\n
          \       } else {\r\n            usageMessage = properties.msg.dataallowance[checkedChargingType].over;\r\n
          \       }\r\n    } else if (parseInt(percentDataUsed) >= parseInt(thresholdPercentage))
          {\r\n        if (alwaysOn.toString() == 'true') {\r\n            usageMessage
          = properties.msg.dataallowance.alwayson.warning;\r\n        } else {\r\n
          \           usageMessage = properties.msg.dataallowance[checkedChargingType].warning;\r\n
          \       }\r\n    } else {\r\n        usageMessage = properties.msg.dataallowance[checkedChargingType].normal;\r\n
          \   }\r\n    return usageMessage;\r\n}\r\n\r\n//returns the bundle type
          in upper case\r\nfunction getBundleType(bundleType) {\r\n    \r\n    var
          BundleTypes =[ \"CORE\", \"RECURRING TOPUP\", \"ROLLOVER TOPUP\", \"ROLLEDOVER
          TOPUP\", \"AUDIO\"];\r\n    for (var i = 0; i < BundleTypes.length; i++)
          {\r\n        if (bundleType.toUpperCase() == BundleTypes[i]) {\r\n            if
          (BundleTypes[i].includes(' ')) {\r\n                var bundle = BundleTypes[i].replace('
          ', '_');\r\n                return bundle;\r\n            } else {\r\n                return
          BundleTypes[i];\r\n            }\r\n        }\r\n    }\r\n    return 'INVALID';\r\n}\r\n\r\n//returns
          the value from properties file concatenated with starting allowance according
          to the bundle type\r\nfunction getStartingAllowanceMessage(bundleType, startingAllowance)
          {\r\n    var format;\r\n    var flag = true;\r\n    var value;\r\n    switch
          (bundleType) {\r\n        case 'CORE':\r\n        format = properties.msg.dataallowance.breakdown.core;\r\n
          \       break;\r\n        case 'RECURRING_TOPUP':\r\n        format = properties.msg.dataallowance.breakdown.recurringtopup;\r\n
          \       break;\r\n        case 'ROLLEDOVER_TOPUP':\r\n        format = properties.msg.dataallowance.breakdown.rolledovertopup;\r\n
          \       break;\r\n        case 'ROLLOVER_TOPUP':\r\n        format = properties.msg.dataallowance.breakdown.rollovertopup;\r\n
          \       break;\r\n        default:\r\n        break;\r\n    }\r\n    if
          (! flag) {\r\n        flag = true;\r\n        value = roundDown(convert(startingAllowance,
          flag), 2);\r\n    } else {\r\n        value = roundDown(convert(startingAllowance,
          flag), 2);\r\n    }\r\n    \r\n    var message = format.replace('%s', value);\r\n
          \   return message;\r\n}\r\n\r\n//returns the value from properties file\r\nfunction
          isRODEnabled() {\r\n    \r\n    var value = properties.feature.dataallowance.breakdown;\r\n
          \   if (value != null) {\r\n        return value;\r\n    } else {\r\n        return
          true;\r\n    }\r\n}\r\n\r\n//function for data bundles breakdown in accordance
          with bundle type\r\nfunction updateAllowanceBreakdown(DataAllowanceResponse,
          soaResponseJSON, renewalDate) {\r\n    var flag = true;\r\n    var bundleType
          = null;\r\n    var dataAllowancesByBundleType =[];\r\n    var allowanceDetails
          =[];\r\n    var k = 0;\r\n    var x = 1;\r\n    var audioDataAllowance =
          {\r\n    };\r\n    \r\n    //if bundles exist in soaResponseJSON\r\n    if
          (! isJSONEmpty(soaResponseJSON.Envelope.Body.getDataAllowance_1Response.msisdnLevelAllowances.dataAllowancesByBundleType))
          {\r\n        dataAllowancesByBundleType = soaResponseJSON.Envelope.Body.getDataAllowance_1Response.msisdnLevelAllowances.dataAllowancesByBundleType;\r\n
          \       var dataBundles =[];\r\n        //if only one bundle is present\r\n
          \       if (!(isJSONEmpty(dataAllowancesByBundleType.dataBundle)) && dataAllowancesByBundleType.dataBundle.length
          == undefined) {\r\n            dataBundles.push(dataAllowancesByBundleType.dataBundle);\r\n
          \       } else if (dataAllowancesByBundleType.dataBundle.length > 0) {\r\n
          \           dataBundles = dataAllowancesByBundleType.dataBundle;\r\n        }\r\n
          \       \r\n        //loop for every data bundle\r\n        for (var i =
          0; i < dataBundles.length; i++) {\r\n            var expiryDate = null;\r\n
          \           if (ifJsonHasKey(dataBundles[i], 'bundleType')) {\r\n                bundleType
          = getBundleType(dataBundles[i].bundleType.$);\r\n            }\r\n            if
          (ifJsonHasKey(dataBundles[i], 'expiryDate')) {\r\n                expiryDate
          = dataBundles[i].expiryDate.$;\r\n            }\r\n            if (bundleType
          == 'CORE') {\r\n                expiryDate = renewalDate;\r\n            }\r\n
          \           //if bundle type is AUDIO\r\n            if (bundleType == 'AUDIO')
          {\r\n                if (ifJsonHasKey(dataBundles[i], 'startingAllowance'))
          {\r\n                    if (! flag) {\r\n                        flag =
          true;\r\n                        audioDataAllowance.starting_balance = roundDown(convert(dataBundles[i].startingAllowance.$,
          flag), 2);\r\n                    } else {\r\n                        audioDataAllowance.starting_balance
          = roundDown(convert(dataBundles[i].startingAllowance.$, flag), 2);\r\n                    }\r\n
          \               }\r\n                if (ifJsonHasKey(dataBundles[i], 'allowanceRemaining'))
          {\r\n                    if (flag) {\r\n                        flag = false;\r\n
          \                       audioDataAllowance.allowance_remaining = roundDown(convert(dataBundles[i].allowanceRemaining.$,
          flag), 2);\r\n                    } else {\r\n                        audioDataAllowance.allowance_remaining
          = roundDown(convert(dataBundles[i].allowanceRemaining.$, flag), 2);\r\n
          \                   }\r\n                    \r\n                    if
          (dataBundles[i].allowanceRemaining.$ == 0) {\r\n                        audioDataAllowance.is_above_FUP_limit
          = true;\r\n                        audioDataAllowance.above_FUP_limit_message
          = properties.audioallowance.abovefuplimit;\r\n                    } else
          {\r\n                        audioDataAllowance.is_above_FUP_limit = false;\r\n
          \                   }\r\n                }\r\n                if (ifJsonHasKey(dataBundles[i],
          'allowanceUsed')) {\r\n                    if (! flag) {\r\n                        flag
          = true;\r\n                        audioDataAllowance.allowance_used = roundup(convert(dataBundles[i].allowanceUsed.$,
          flag), 2);\r\n                    } else {\r\n                        audioDataAllowance.allowance_used
          = roundup(convert(dataBundles[i].allowanceUsed.$, flag), 2);\r\n                    }\r\n
          \               }\r\n                audioDataAllowance.renewal_date = formatDate(expiryDate);\r\n
          \           } else {\r\n                var allowanceDetail = {\r\n                };\r\n
          \               if (ifJsonHasKey(dataBundles[i], 'startingAllowance')) {\r\n
          \                   var startingAllowanceMessage = getStartingAllowanceMessage(bundleType,
          parseInt(dataBundles[i].startingAllowance.$));\r\n                    allowanceDetail.starting_allowance_message
          = startingAllowanceMessage;\r\n                }\r\n                if (ifJsonHasKey(dataBundles[i],
          'bundleType')) {\r\n                    allowanceDetail.bundle_type = bundleType;\r\n
          \               }\r\n                if (expiryDate != null) {\r\n                    allowanceDetail.expiry_date
          = expiryDate;\r\n                }\r\n                \r\n                allowanceDetails.push(allowanceDetail);\r\n
          \           }\r\n        }\r\n        \r\n        \r\n        if (! isJSONEmpty(allowanceDetails))
          {\r\n            //sorting allowanceDetails with respect to expiry date\r\n
          \           var allowance_details =[];\r\n            \r\n            for
          (var i = 0; i < allowanceDetails.length; i++) {\r\n                if (allowanceDetails[i].expiry_date
          == null) {\r\n                    allowance_details[allowanceDetails.length
          - x] = allowanceDetails[i];\r\n                    x++;\r\n                }
          else {\r\n                    \r\n                    allowance_details[k]
          = allowanceDetails[i];\r\n                    k++\r\n                }\r\n
          \           }\r\n            allowanceDetails = sortByKey(allowance_details,
          'expiry_date');\r\n            for (var i = 0; i < allowanceDetails.length;
          i++) {\r\n                if (allowanceDetails[i].expiry_date != null) {\r\n
          \                   allowanceDetails[i].expiry_date = formatDate(allowanceDetails[i].expiry_date);\r\n
          \               }\r\n            }\r\n            //adding allowanceDetails
          to final output\r\n            DataAllowanceResponse.allowance_details =
          allowanceDetails;\r\n            var allBoltonsExpireOnSameDate = areAllBoltonsExpireOnSameDate(allowanceDetails);\r\n
          \           //setting renewal date to null if all boltons dont expire on
          same date\r\n            if (! allBoltonsExpireOnSameDate) {\r\n                DataAllowanceResponse.renewal_date
          = null;\r\n            }\r\n        }\r\n        //adding audioDataAllowance
          to final output\r\n        if (! isJSONEmpty(audioDataAllowance)) {\r\n
          \           DataAllowanceResponse.audio_data_allowance = audioDataAllowance;\r\n
          \       } else {\r\n            DataAllowanceResponse.audio_data_allowance
          = null;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//sort function\r\nfunction
          sortByKey(array, key) {\r\n    return array.sort(function (a, b) {\r\n        var
          x = a[key]; var y = b[key];\r\n        return ((x < y) ? -1: ((x > y) ?
          1: 0));\r\n    });\r\n}\r\n\r\n//function to check if a boltons expire on
          same date\r\nfunction areAllBoltonsExpireOnSameDate(allowanceDetails) {\r\n
          \   var expiryDate = allowanceDetails[0].expiry_date;\r\n    for (var i
          = 0; i < allowanceDetails.length; i++) {\r\n        if (expiryDate == null
          || allowanceDetails[i].expiry_date == null || !(expiryDate == allowanceDetails[i].expiry_date))
          {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n//function
          to check if json object is empty or not\r\nfunction isJSONEmpty(jsonObject)
          {\r\n    var member;\r\n    var result = true;\r\n    for (member in jsonObject)
          {\r\n        if (jsonObject[member] != null) {\r\n            result = false;\r\n
          \       }\r\n    }\r\n    return result;\r\n}\r\n\r\n//function to check
          if a certain field is present in json object/ json array\r\nfunction ifJsonHasKey(jsonObject,
          key) {\r\n    var member;\r\n    var result = false;\r\n    for (member
          in jsonObject) {\r\n        if (member == key) {\r\n            result =
          true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n//format the
          date to dd.mm.yyyy\r\nfunction formatDate(date) {\r\n    if (date != null)
          {\r\n        var year = date.substr(0, 4);\r\n        var month = date.substr(5,
          2);\r\n        var day = date.substr(8, 2);\r\n        return day + \".\"
          + month + \".\" + year;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction
          roundup(rnum, rlength) {\r\n    if (rnum == 'Unlimited' || rnum == null)
          {\r\n        return rnum;\r\n    } else {\r\n        var str = rnum.toString();\r\n
          \       var allowance_unit = str.slice(- 2);\r\n        var allowance =
          str.substring(0, str.length - 2);\r\n        var newnumber = Math.ceil(allowance
          * Math.pow(10, rlength)) / Math.pow(10, rlength);\r\n        return newnumber
          + allowance_unit;\r\n    }\r\n}\r\n\r\n\r\nfunction roundDown(number, decimals)
          {\r\n    if (number == 'Unlimited' || number == null) {\r\n        return
          number;\r\n    } else {\r\n        decimals = decimals || 0;\r\n        var
          str = number.toString();\r\n        var allowance_unit = str.slice(- 2);\r\n
          \       var allowance = str.substring(0, str.length - 2);\r\n        return
          (Math.floor(allowance * Math.pow(10, decimals)) / Math.pow(10, decimals))
          + allowance_unit;\r\n    }\r\n}"
    - validate:
        title: ResponseValidation
        version: 1.0.0
        definition: '#/definitions/DataAllowanceResponse'
    - gatewayscript:
        version: 1.0.0
        title: GS-ExtractFinalLoggingData
        description: This GW Script will extract final metadata for logging
        source: |-
          /* ************************************************************************************************************* */
          /* ************************************************************************************************************* */
          /* FileName                      Version    Created By                  Modified By               Date           */
          /* ExtractFinalLoggingData.js    1.0        Dinesh Tomar                                          06-July-2018   */
          /*                                                                                                               */
          /* ************************************************************************************************************* */
          /* Purpose: This GW Script will extract final metadata for logging                                               */
          /*                                                                                                               */
          /* Required params:                                                                                              */
          /* ***************************************************************************************************************/
          //Extract general metadata from system variables
          var systemDateTime = apim.getvariable('system.datetime');
          var apicTxId = apim.getvariable('apic-transaction-id');
          var xGlobalTxId = apim.getvariable('request.headers.x-global-transaction-id');
          var requestURI = apim.getvariable('request.uri');

          //Extract response metadata from system variables
          var responseHeaders = apim.getvariable('message.headers');

          delete responseHeaders['Accept-Encoding'];
          delete responseHeaders['X-Global-Transaction-ID'];
          delete responseHeaders['User-Agent'];
          delete responseHeaders['Via'];
          delete responseHeaders['x-authcode'];
          delete responseHeaders['authorization'];
          delete responseHeaders['Authorization'];
          delete responseHeaders['Access-Control-Allow-Methods'];
          delete responseHeaders['Access-Control-Allow-Origin'];
          delete responseHeaders['Access-Control-Allow-Headers'];
          delete responseHeaders['Access-Control-Expose-Headers'];

          var responseHeadersString = JSON.stringify(responseHeaders);
          var responseStatusCode = apim.getvariable('message.status.code');
          var responseStatusReason = apim.getvariable('message.status.reason');
          //calculate time elapsed
          var apiStartTimeMS = apim.getvariable('apiStartTimeMS');
          var apiEndTimeMS = (new Date()).getTime();
          var totalTimeElapsed = (apiEndTimeMS - apiStartTimeMS) + " ms";
          var logString = "type:=response"
                          + " | system-datetime:=" +        systemDateTime
                          + " | apic-transaction-id:=" +    apicTxId
                          + " | global-transaction-id:=" +  xGlobalTxId
                          + " | request-uri:=" +            requestURI
                          + apim.getvariable('logString')
                          + " | response-http-headers:=" +  responseHeadersString
                          + " | response-status-code:=" +   responseStatusCode
                          + " | response-status-reason:=" + responseStatusReason
                          + " | total-time-elapsed:=" +     totalTimeElapsed;
                          ;
          console.log(logString);
    catch:
    - errors:
      - InvalidAuthCode
      - InvalidMsisdn
      - ConnectionError
      - OperationError
      - SOAPError
      - InvalidDeviceType
      - InvalidUserId
      - InvalidCorrelator
      - InvalidClientId
      - BackendError
      execute:
      - gatewayscript:
          title: GS:ErrorHandling
          version: 1.0.0
          source: |-
            /* ****************************************************************************************************************** */
            /* ****************************************************************************************************************** */
            /* FileName                           Version    Created By                  Modified By               Date           */
            /* Errorhandling.js                   1.0        Dinesh Tomar                                          07-May-2018    */
            /*                                                                                                                    */
            /* ****************************************************************************************************************** */
            /* Purpose: This GW Script file will read error config for the catch block error name and will set the necessary      */
            /*          params like status code, reason phrase and will return the error json                                     */
            /* Required params: errorName                                                                                         */
            /* ****************************************************************************************************************** */
            var urlOpen = require('urlopen');
            //form url for to fetch errorConfig JSON
            var requestURL = apim.getvariable('request.uri');
            var orgName = apim.getvariable('api.org.name');
            var hostName = requestURL.substr(0, requestURL.indexOf(orgName));
            var catalog = apim.getvariable('env.path');
            var errorConfigURL = hostName+orgName+'/'+catalog+'/'+'config/errorconfig';
            var clientId = apim.getvariable('client.app.id');
            apim.setvariable('message.headers.content-type', 'application/json');
            var errorConfigURLOptions = {
                target: errorConfigURL,
                sslClientProfile: 'api-sslcli-all',
                headers: {'x-ibm-client-id': clientId, 'content-type': 'application/json' }
            };
            //fetch errorName and errorConfig JSON from context variables
            urlOpen.open(errorConfigURLOptions, function (error, response) {
                if (error) {
                    throw error;
                } else {
                    response.readAsJSON(function (error, errorConfigJSON) {
                        if (error) {
                            throw error;
                        } else {
                            var errorName = apim.getvariable('errorName');
                            if (errorName == null && apim.getvariable('message.status.code') == null) {
                                //console.log("inside first if");
                                errorName = 'default';
                            } else if (errorName == null && apim.getvariable('message.status.reason') != null && apim.getvariable('message.status.reason').startsWith('APIC:') ) {
                                errorName = 'default';
                                apim.setvariable('message.status.code', apim.getvariable('message.status.code'));
                                apim.setvariable('message.status.reason', apim.getvariable('message.status.reason'));
                                apim.setvariable('message.body', apim.getvariable('message.body'));
                            } else {
                                if (errorName == 'BackendError') {
                                    var errorDetails = errorConfigJSON.errorConfig.errorTypes[errorName];
                                    apim.setvariable('message.status.reason', errorDetails.reasonPhrase);
                                    var errorMessage = errorDetails.errorMessage;
                                    errorMessage.error.message = apim.getvariable('error-message');
                                    apim.setvariable('message.body', errorMessage);
                                }
                                //fetch specific block from error config JSON
                                else if (! isJSONEmpty(errorConfigJSON)) {
                                    var errorDetails = errorConfigJSON.errorConfig.errorTypes[errorName];
                                    var statusCode = errorDetails.statusCode;
                                    var reasonPhrase = errorDetails.reasonPhrase;
                                    var errorMessage = errorDetails.errorMessage;
                                    apim.setvariable('message.status.code', statusCode);
                                    apim.setvariable('message.status.reason', reasonPhrase);
                                    apim.setvariable('message.body', errorMessage);
                                }
                                //else block executes in case error config file is not loaded. it will set a default error message
                                else {
                                    apim.setvariable('message.status.code', 500);
                                    apim.setvariable('message.status.reason', 'Internal Error');
                                    var errorMessage = {};
                                    errorMessage.httpCode = 400;
                                    errorMessage.httpMessage = "Internal Error";
                                    errorMessage.moreInformation = "Something's wrong. Please try again later.";
                                    apim.setvariable('message.body', errorMessage);
                                }
                            }
                        }
                    });
                }
            });

            //below function checks if json object is null or not
            function isJSONEmpty(jsonObject) {
                var member;
                var result = true;
                for (member in jsonObject) {
                    if (jsonObject[member] != null) {
                        result = false;
                    }
                }
                return result;
            }
      - gatewayscript:
          title: GS-ExtractErrorLoggingData
          version: 1.0.0
          source: "/* *************************************************************************************************************
            */\n/* *************************************************************************************************************
            */\n/* FileName                      Version    Created By                  Modified
            By               Date           */\n/* ExtractErrorLoggingData.js    1.0
            \       Dinesh Tomar                                          06-July-2018
            \  */\n/*                                                                                                               */\n/*
            *************************************************************************************************************
            */\n/* Purpose: This GW Script will extract error metadata for logging
            \                                              */\n/*                                                                                                               */\n/*
            Required params:                                                                                              */\n/*
            ***************************************************************************************************************/\n//Extract
            general metadata from system variables\nvar systemDateTime = apim.getvariable('system.datetime');\nvar
            apicTxId = apim.getvariable('apic-transaction-id');\nvar xGlobalTxId =
            apim.getvariable('request.headers.x-global-transaction-id');\nvar requestURI
            = apim.getvariable('request.uri');\n\n//Extract response metadata from
            system variables\nvar responseHeaders = apim.getvariable('message.headers');\n\ndelete
            responseHeaders['Accept-Encoding'];\ndelete responseHeaders['X-Global-Transaction-ID'];\ndelete
            responseHeaders['User-Agent'];\ndelete responseHeaders['Via'];\ndelete
            responseHeaders['x-authcode'];\ndelete responseHeaders['authorization'];\ndelete
            responseHeaders['Authorization'];\ndelete responseHeaders['Access-Control-Allow-Methods'];\ndelete
            responseHeaders['Access-Control-Allow-Origin'];\ndelete responseHeaders['Access-Control-Allow-Headers'];\ndelete
            responseHeaders['Access-Control-Expose-Headers'];\n\nvar responseHeadersString
            = JSON.stringify(responseHeaders);\nvar responseStatusCode = apim.getvariable('message.status.code');\nvar
            responseStatusReason = apim.getvariable('message.status.reason');\nvar
            errorName = apim.getvariable('errorName');\n//calculate time elapsed\nvar
            apiStartTimeMS = apim.getvariable('apiStartTimeMS');\nvar apiEndTimeMS
            = (new Date()).getTime();\nvar totalTimeElapsed = (apiEndTimeMS - apiStartTimeMS)
            + \" ms\";\n\nvar logString = \"type:=error\"\n                + \" |
            system-datetime:=\" +        systemDateTime\n                + \" | apic-transaction-id:=\"
            +    apicTxId\n                + \" | global-transaction-id:=\" +  xGlobalTxId\n
            \               + \" | request-uri:=\" +            requestURI\n                +
            apim.getvariable('logString')\n                + \" | response-http-headers:=\"
            +  responseHeadersString\n                + \" | response-status-code:=\"
            +   responseStatusCode\n                + \" | response-status-reason:=\"
            + responseStatusReason\n                + \" | error-name:=\" +             errorName\n
            \               + \" | total-time-elapsed:=\" +     totalTimeElapsed;\n
            \               \nconsole.log(logString);\n\n"
          description: This GW Script will extract error metadata for logging
  gateway: datapower-gateway
  type: rest
tags: []
definitions:
  AllowanceDetail:
    type: object
    properties:
      bundleType:
        type: string
      startingAllowanceMessage:
        type: string
      expiryDate:
        type: string
        format: date-time
  AudioDataAllowance:
    type: object
    properties:
      startingBalance:
        type: integer
        format: int32
      allowanceUsed:
        type: integer
        format: int32
      allowanceRemaining:
        type: integer
        format: int32
      renewalDate:
        type: string
        format: date-time
      aboveFairUsagePolicyLimitMessage:
        type: string
      aboveFairUsagePolicyLimit:
        type: boolean
  DataAllowanceResponse:
    type: object
    properties:
      startingBalance:
        type: integer
        format: int32
      allowanceUsed:
        type: integer
        format: int32
      allowanceRemaining:
        type: integer
        format: int32
      renewalDate:
        type: string
        format: date-time
      chargingType:
        type: string
      percentDataUsed:
        type: number
        format: double
      thresholdPercentage:
        type: integer
        format: int32
      usageInfoMessage:
        type: string
      usageSummaryMessage:
        type: string
      usageMessage:
        type: string
      footerMessage:
        type: string
      audioDataAllowance:
        $ref: '#/definitions/AudioDataAllowance'
      allowanceDetails:
        type: array
        items:
          $ref: '#/definitions/AllowanceDetail'
      allowanceFooterMessage:
        type: string
paths:
  /{msisdn}/postpay/allowance/data:
    get:
      responses:
        "200":
          description: 200 OK
          schema:
            $ref: '#/definitions/DataAllowanceResponse'
      parameters:
      - name: msisdn
        format: int32
        type: integer
        in: path
        required: true
      - name: x-authcode
        type: string
        in: header
        required: true
      - name: x-device
        type: string
        in: header
        required: true
      - name: x-user-id
        type: string
        in: header
        required: true
      - name: x-correlator
        type: string
        in: header
        required: true
      - name: x-client-id
        type: string
        in: header
        required: true
      consumes: []
      produces: []
    parameters: []
