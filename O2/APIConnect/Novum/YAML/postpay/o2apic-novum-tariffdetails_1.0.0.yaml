---
swagger: "2.0"
info:
  x-ibm-name: "o2apic-novum-tariffdetails"
  title: "o2apic-novum-tariffdetails"
  version: "1.0.0"
schemes:
- "https"
host: "$(catalog.host)"
basePath: "/apic"
consumes:
- "application/json"
produces:
- "application/json"
securityDefinitions:
  clientIdHeader:
    type: "apiKey"
    in: "header"
    name: "X-IBM-Client-Id"
security:
- clientIdHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
    - activity-log:
        title: "Log:Payload"
        content: "payload"
        error-content: "payload"
        version: "1.0.0"
    - gatewayscript:
        title: "GS:FetchProperties"
        version: "1.0.0"
        source: "/* ***********************************************************************************************************************\
          \ */\n/* ***********************************************************************************************************************\
          \ */\n/* FileName                                Version    Created By \
          \                 Modified By               Date           */\n/* FetchProperties.js\
          \                      1.0        Dinesh Tomar                         \
          \                 14-June-2018   */\n/*                                \
          \                                                                      \
          \                   */\n/* ***********************************************************************************************************************\
          \ */\n/* Purpose: This GW Script will create URL to fetch properties from\
          \ config api                                             */\n/*        \
          \                                                                      \
          \                                           */\n/* Required params:    \
          \                                                                      \
          \                              */\n/* ***********************************************************************************************************************\
          \ */\nvar clientId = apim.getvariable('client.app.id');\napim.setvariable('message.headers.x-ibm-client-id',\
          \ clientId);\napim.setvariable('message.headers.content-type', 'application/json');\n\
          //form url for to fetch errorConfig JSON\nvar hostName = apim.getvariable('api.endpoint.hostname');\n\
          var orgName = apim.getvariable('api.org.name');\nvar catalog = apim.getvariable('env.path');\n\
          var configPropertiesURL = 'https://'+hostName+'/'+orgName+'/'+catalog+'/'+'config/properties';\n\
          apim.setvariable('configPropertiesURL', configPropertiesURL);"
        description: "This GW Script will create URL to fetch properties from config\
          \ api"
    - invoke:
        title: "Invoke:PropertiesHandler"
        timeout: 60
        verb: "GET"
        cache-response: "time-to-live"
        cache-ttl: 60
        stop-on-error:
        - "ConnectionError"
        - "OperationError"
        - "SOAPError"
        version: "1.0.0"
        description: "Load all messages  and properties in context"
        target-url: "$(configPropertiesURL)"
        output: "messages-property"
    - gatewayscript:
        title: "GS:ValidateParameters"
        version: "1.0.0"
        source: "/* ***********************************************************************************************************************\
          \ */\n/* ***********************************************************************************************************************\
          \ */\n/* FileName                                Version    Created By \
          \                 Modified By               Date           */\n/* ValidateParameters.js\
          \                   1.0        Dinesh Tomar                            \
          \              20-Apr-2018    */\n/*                                   \
          \                                                                      \
          \                */\n/* ***********************************************************************************************************************\
          \ */\n/* Purpose: This GW Script file will validate request parameters \
          \                                                          */\n/*      \
          \                                                                      \
          \                                             */\n/* Required params:  \
          \                                                                      \
          \                                */\n/* ***********************************************************************************************************************\
          \ */\n//load properties configuration from context variable\nvar messages\
          \ = apim.getvariable('messages-property.body');\n//get all input parameters\n\
          var clientId = apim.getvariable('client.app.id');\nvar msisdn = apim.getvariable('request.parameters.msisdn');\n\
          var tariffname = apim.getvariable('request.parameters.tariffname');\nvar\
          \ productlabel = apim.getvariable('request.parameters.productlabel');\n\
          var authCode = apim.getvariable('request.headers.x-authcode');\nvar deviceType\
          \ = apim.getvariable('request.headers.x-device');\nvar userId = apim.getvariable('request.headers.x-user-id');\n\
          var correlator = apim.getvariable('request.headers.x-correlator');\n//check\
          \ all headers validation\nif (msisdn == null || msisdn == undefined || isNaN(parseInt(msisdn))){\n\
          \    apim.setvariable('errorName', 'InvalidMsisdn');\n    apim.error('InvalidMsisdn',\
          \ 400, 'Internal Error', 'Missing or invalid msisdn');\n}\nelse if (tariffname\
          \ == null || tariffname == undefined){\n    apim.setvariable('errorName',\
          \ 'InvalidTariff');\n    apim.error('InvalidTariff', 400, 'Internal Error',\
          \ 'Missing or invalid tariff');\n}\nelse if (productlabel == null || productlabel\
          \ == undefined){\n    apim.setvariable('errorName', 'InvalidProductLabel');\n\
          \    apim.error('InvalidProductLabel', 400, 'Internal Error', 'Missing or\
          \ product label');\n}\nelse if (authCode == null){\n    apim.setvariable('errorName',\
          \ 'InvalidAuthCode');\n    apim.error('InvalidAuthCode', 400, 'Internal\
          \ Error', 'Missing or invalid authcode');\n}\nelse if (deviceType == null){\n\
          \    apim.setvariable('errorName', 'InvalidDeviceType');\n    apim.error('InvalidDeviceType',\
          \ 400, 'Internal Error', 'Missing or invalid device type');\n}\nelse if\
          \ (userId == null){\n    apim.setvariable('errorName', 'InvalidUserId');\n\
          \    apim.error('InvalidUserId', 400, 'Internal Error', 'Missing or invalid\
          \ user id');\n}\nelse if (correlator == null){\n    apim.setvariable('errorName',\
          \ 'InvalidCorrelator');\n    apim.error('InvalidCorrelator', 400, 'Internal\
          \ Error', 'Missing or invalid correlator');\n}\nelse if (messages == null\
          \ || isJSONEmpty(messages)){\n    apim.setvariable('errorName', 'ConnectionError');\n\
          \    apim.error('ConnectionError', 500, 'Internal Error', 'Connection error');\n\
          }\nelse {\n    apim.setvariable('message.headers.x-ibm-client-id', clientId);\n\
          \    apim.setvariable('message.headers.content-type', 'application/xml');\n\
          \    apim.setvariable('message.headers.soapaction', 'test');\n    apim.setvariable('soaGetTariffProductEndpoint',\
          \ messages.soa.getTariffProduct.uri);\n}\n\nfunction isJSONEmpty(jsonObject)\
          \ {\n    var member;\n    var result = true;\n    for (member in jsonObject)\
          \ {\n        if (jsonObject[member] != null) {\n            result = false;\n\
          \        }\n    }\n    return result;\n}"
        description: "This GW Script file will validate request parameters"
    - map:
        title: "Map:CreateSOARequest"
        inputs:
          tariffname:
            schema:
              type: "string"
            variable: "request.parameters.tariffname"
          productlabel:
            schema:
              type: "string"
            variable: "request.parameters.productlabel"
        outputs:
          output:
            schema:
              $ref: "#/definitions/getTariffProductInfoRequest"
            variable: "message.body"
            content: "application/xml"
        actions:
        - set: "output.Envelope.Body.getTariffProductInfo.tariffName"
          from: "tariffname"
        - set: "output.Envelope.Body.getTariffProductInfo.productLabel"
          from: "productlabel"
        version: "1.0.0"
    - invoke:
        title: "Invoke:SOAGetTariffProductInfo"
        timeout: 60
        verb: "POST"
        cache-response: "protocol"
        cache-ttl: 900
        version: "1.0.0"
        target-url: "$(soaGetTariffProductEndpoint)"
        compression: true
        output: "soaResponse"
        stop-on-error:
        - "ConnectionError"
        - "OperationError"
        - "SOAPError"
    - map:
        title: "Map:CreateTariffDetails"
        inputs:
          SOAResponse:
            schema:
              $ref: "#/definitions/getTariffProductInfoResponse"
            variable: "soaResponse.body"
            content: "application/xml"
        outputs:
          output:
            schema:
              $ref: "#/definitions/tariffDetailsResponse"
            variable: "message.body"
            content: "application/json"
          content-type:
            schema:
              type: "string"
            variable: "message.headers.content-type"
            content: "application/json"
        actions:
        - create: "output.tariff_details"
          foreach: "SOAResponse.Envelope.Body.getTariffProductInfoResponse.TariffProductInfoStruct.InfoBeans"
          from: "SOAResponse.Envelope.Body.getTariffProductInfoResponse.TariffProductInfoStruct.InfoBeans"
          actions:
          - set: "item"
            from: "Key"
          - set: "charge"
            from: "Value"
        - set: "output.info_message"
          value: "'Charges are per minute unless noted and they include VAT.'"
        - set: "content-type"
          value: "application/json"
        version: "1.0.0"
    catch:
    - errors:
      - "InvalidMsisdn"
      - "InvalidDeviceType"
      - "InvalidCorrelator"
      - "InvalidUserId"
      - "InvalidAuthCode"
      - "ConnectionError"
      - "OperationError"
      - "SOAPError"
      - "UnauthorizedError"
      execute:
      - gatewayscript:
          title: "GS:ErrorHandling"
          version: "1.0.0"
          source: "/* ***********************************************************************************************************************\
            \ */\n/* ***********************************************************************************************************************\
            \ */\n/* FileName                                Version    Created By\
            \                  Modified By               Date           */\n/* Errorhandling.js\
            \                        1.0        Dinesh Tomar                     \
            \                     07-May-2018    */\n/*                          \
            \                                                                    \
            \                           */\n/* ***********************************************************************************************************************\
            \ */\n/* Purpose: This GW Script file will read error config for the catch\
            \ block error name and will set the necessary params    */\n/*       \
            \   like status code, reason phrase and will return the error json   \
            \                                              */\n/* Required params:\
            \ errorName                                                          \
            \                                    */\n/* ***********************************************************************************************************************\
            \ */\nvar urlOpen = require('urlopen');\n//form url for to fetch errorConfig\
            \ JSON\nvar hostName = apim.getvariable('api.endpoint.hostname');\nvar\
            \ orgName = apim.getvariable('api.org.name');\nvar catalog = apim.getvariable('env.path');\n\
            var errorConfigURL = 'https://'+hostName+'/'+orgName+'/'+catalog+'/'+'config/errorconfig';\n\
            var clientId = apim.getvariable('client.app.id');\nvar errorConfigURLOptions\
            \ = {\n    target: errorConfigURL,\n    sslClientProfile: 'api-sslcli-all',\n\
            \    headers: {'x-ibm-client-id': clientId, 'content-type': 'application/json'\
            \ }\n};\n//fetch errorName and errorConfig JSON from context variables\n\
            urlOpen.open(errorConfigURLOptions, function (error, response) {\n   \
            \ if (error) {\n        throw error;\n    } else {\n        response.readAsJSON(function\
            \ (error, errorConfigJSON) {\n            if (error) {\n             \
            \   throw error;\n            } else {\n                var errorName\
            \ = apim.getvariable('errorName');\n                if (errorName == null\
            \ && apim.getvariable('message.status.code') == null) {\n            \
            \        errorName = 'default';\n                } else if (errorName\
            \ == null && apim.getvariable('message.status.reason') != null && apim.getvariable('message.status.reason').startsWith('APIC:')\
            \ ) {\n                    errorName = 'default';\n                  \
            \  apim.setvariable('message.status.code', apim.getvariable('message.status.code'));\n\
            \                    apim.setvariable('message.status.reason', apim.getvariable('message.status.reason'));\n\
            \                    apim.setvariable('message.body', apim.getvariable('message.body'));\n\
            \                } else {\n                    //fetch specific block\
            \ from error config JSON\n                    if (! isJSONEmpty(errorConfigJSON))\
            \ {\n                        var errorDetails = errorConfigJSON.errorConfig.errorTypes[errorName];\n\
            \                        var statusCode = errorDetails.statusCode;\n \
            \                       var reasonPhrase = errorDetails.reasonPhrase;\n\
            \                        var errorMessage = errorDetails.errorMessage;\n\
            \                        apim.setvariable('message.headers.content-type',\
            \ 'application/json');\n                        apim.setvariable('message.status.code',\
            \ statusCode);\n                        apim.setvariable('message.status.reason',\
            \ reasonPhrase);\n                        apim.setvariable('message.body',\
            \ errorMessage);\n                    }\n                    //else block\
            \ executes in case error config file is not loaded. it will set a default\
            \ error message\n                    else {\n                        apim.setvariable('message.headers.content-type',\
            \ 'application/json');\n                        apim.setvariable('message.status.code',\
            \ 500);\n                        apim.setvariable('message.status.reason',\
            \ 'Internal Server Error');\n                        apim.setvariable('message.body',\
            \ {\n                            \"error\": \"Something went wrong\"\n\
            \                        });\n                    }\n                }\n\
            \            }\n        });\n    }\n});\n\n//below function checks if\
            \ json object is null or not\nfunction isJSONEmpty(jsonObject) {\n   \
            \ var member;\n    var result = true;\n    for (member in jsonObject)\
            \ {\n        if (jsonObject[member] != null) {\n            result = false;\n\
            \        }\n    }\n    return result;\n}"
  phase: "realized"
paths:
  /{msisdn}/postpay/tariffdetails:
    get:
      responses:
        200:
          description: "200 OK"
    parameters:
    - $ref: "#/parameters/msisdn"
    - $ref: "#/parameters/tariffname"
    - $ref: "#/parameters/productlabel"
    - $ref: "#/parameters/x-authcode"
    - $ref: "#/parameters/x-user-id"
    - $ref: "#/parameters/x-device"
    - $ref: "#/parameters/x-correlator"
definitions:
  getTariffProductInfoRequest:
    description: ""
    type: "object"
    properties:
      Envelope:
        type: "object"
        properties:
          Header:
            type: "object"
            properties:
              Security:
                type: "object"
                properties:
                  UsernameToken:
                    type: "object"
                    properties:
                      Username:
                        type: "string"
                      Password:
                        type: "string"
                        properties:
                          Type:
                            type: "string"
                            xml:
                              attribute: true
                      Id:
                        type: "string"
                        xml:
                          attribute: true
                          prefix: "wsu"
                  mustUnderstand:
                    type: "string"
                    xml:
                      attribute: true
                      prefix: "soapenv"
                xml:
                  namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
                  prefix: "wsse"
          Body:
            type: "object"
            properties:
              getTariffProductInfo:
                type: "object"
                properties:
                  tariffName:
                    type: "string"
                  productLabel:
                    type: "string"
                xml:
                  namespace: "http://webservice.o2.com"
                  prefix: "web"
        xml:
          namespace: "http://schemas.xmlsoap.org/soap/envelope/"
          prefix: "soapenv"
    xml:
      namespace: ""
    example: "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"\
      \ xmlns:web=\"http://webservice.o2.com\">\r\n   <soapenv:Header>\r\n    <wsse:Security\
      \ soapenv:mustUnderstand=\"1\" xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\"\
      \ xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"\
      >\r\n         <wsse:UsernameToken wsu:Id=\"UsernameToken-39110398B3A9B6235314580420508923\"\
      >\r\n            <wsse:Username>testsupport_4321</wsse:Username>\r\n       \
      \     <wsse:Password Type=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\"\
      >t3st1ng</wsse:Password>\r\n         </wsse:UsernameToken>\r\n      </wsse:Security>\r\
      \n   </soapenv:Header>\r\n   <soapenv:Body>\r\n      <web:getTariffProductInfo>\r\
      \n         <!--type: string-->\r\n         <web:tariffName>O2 Refresh 500 24M\
      \ 500MB 4G(CR5911)</web:tariffName>\r\n         <!--type: string-->\r\n    \
      \     <web:productLabel>O2 Refresh Unlimited 24M 20GB</web:productLabel>\r\n\
      \      </web:getTariffProductInfo>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
    required:
    - "Envelope"
  getTariffProductInfoResponse:
    description: ""
    type: "object"
    properties:
      Envelope:
        type: "object"
        properties:
          Header:
            type: "object"
            properties:
              SOATransactionID:
                type: "string"
                xml:
                  namespace: "http://soa.o2.co.uk/coredata_1"
                  prefix: "cor"
          Body:
            type: "object"
            properties:
              getTariffProductInfoResponse:
                type: "object"
                properties:
                  TariffProductInfoStruct:
                    type: "object"
                    properties:
                      InfoBeans:
                        type: "array"
                        items:
                          properties:
                            Key:
                              type: "string"
                              xml:
                                namespace: "java:com.o2.webservice"
                                prefix: "n1"
                            Value:
                              type: "string"
                              xml:
                                namespace: "java:com.o2.webservice"
                                prefix: "n2"
                          type: "object"
                          xml:
                            namespace: "java:com.o2.dashboard.data.tariff"
                            prefix: "java"
                xml:
                  namespace: "http://webservice.o2.com"
                  prefix: "m"
            xml:
              namespace: "http://schemas.xmlsoap.org/soap/envelope/"
              prefix: "env"
        xml:
          namespace: "http://schemas.xmlsoap.org/soap/envelope/"
          prefix: "soapenv"
    xml:
      namespace: ""
    example: "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"\
      >\r\n   <soapenv:Header xmlns:web=\"http://webservice.o2.com\">\r\n      <cor:SOATransactionID\
      \ xmlns:cor=\"http://soa.o2.co.uk/coredata_1\">7278d917-3a42-4f01-90c0-1db8f204b86e</cor:SOATransactionID>\r\
      \n   </soapenv:Header>\r\n   <env:Body xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\"\
      >\r\n      <m:getTariffProductInfoResponse xmlns:m=\"http://webservice.o2.com\"\
      >\r\n         <m:TariffProductInfoStruct xmlns:java=\"java:com.o2.dashboard.data.tariff\"\
      >\r\n            <java:InfoBeans>\r\n               <n1:Key xmlns:n1=\"java:com.o2.webservice\"\
      >Mobile internet over GSM</n1:Key>\r\n               <n2:Value xmlns:n2=\"java:com.o2.webservice\"\
      >35p</n2:Value>\r\n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\
      \n               <n3:Key xmlns:n3=\"java:com.o2.webservice\">MMS (per message)</n3:Key>\r\
      \n               <n4:Value xmlns:n4=\"java:com.o2.webservice\">50p</n4:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n5:Key xmlns:n5=\"java:com.o2.webservice\">Voicemail 901 peak</n5:Key>\r\
      \n               <n6:Value xmlns:n6=\"java:com.o2.webservice\">35p</n6:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n7:Key xmlns:n7=\"java:com.o2.webservice\">peak standard calls</n7:Key>\r\
      \n               <n8:Value xmlns:n8=\"java:com.o2.webservice\">55p</n8:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n9:Key xmlns:n9=\"java:com.o2.webservice\">Voicemail 901 off peak</n9:Key>\r\
      \n               <n10:Value xmlns:n10=\"java:com.o2.webservice\">35p</n10:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n11:Key xmlns:n11=\"java:com.o2.webservice\">O2 to O2 peak UK</n11:Key>\r\
      \n               <n12:Value xmlns:n12=\"java:com.o2.webservice\">55p</n12:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n13:Key xmlns:n13=\"java:com.o2.webservice\">Off-peak standard calls</n13:Key>\r\
      \n               <n14:Value xmlns:n14=\"java:com.o2.webservice\">55p</n14:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n15:Key xmlns:n15=\"java:com.o2.webservice\">O2 to O2 weekend UK</n15:Key>\r\
      \n               <n16:Value xmlns:n16=\"java:com.o2.webservice\">55p</n16:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n17:Key xmlns:n17=\"java:com.o2.webservice\">Xnet peak calls</n17:Key>\r\
      \n               <n18:Value xmlns:n18=\"java:com.o2.webservice\">55p</n18:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n19:Key xmlns:n19=\"java:com.o2.webservice\">Voicemail 901 weekend</n19:Key>\r\
      \n               <n20:Value xmlns:n20=\"java:com.o2.webservice\">35p</n20:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n21:Key xmlns:n21=\"java:com.o2.webservice\">Access charge for service\
      \ numbers</n21:Key>\r\n               <n22:Value xmlns:n22=\"java:com.o2.webservice\"\
      >55p</n22:Value>\r\n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\
      \n               <n23:Key xmlns:n23=\"java:com.o2.webservice\">O2 to O2 off-peak\
      \ UK</n23:Key>\r\n               <n24:Value xmlns:n24=\"java:com.o2.webservice\"\
      >55p</n24:Value>\r\n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\
      \n               <n25:Key xmlns:n25=\"java:com.o2.webservice\">Text (per message)</n25:Key>\r\
      \n               <n26:Value xmlns:n26=\"java:com.o2.webservice\">0p</n26:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n27:Key xmlns:n27=\"java:com.o2.webservice\">Xnet off-peak calls</n27:Key>\r\
      \n               <n28:Value xmlns:n28=\"java:com.o2.webservice\">55p</n28:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n29:Key xmlns:n29=\"java:com.o2.webservice\">Xnet weekend calls</n29:Key>\r\
      \n               <n30:Value xmlns:n30=\"java:com.o2.webservice\">55p</n30:Value>\r\
      \n            </java:InfoBeans>\r\n            <java:InfoBeans>\r\n        \
      \       <n31:Key xmlns:n31=\"java:com.o2.webservice\">Weekend standard calls</n31:Key>\r\
      \n               <n32:Value xmlns:n32=\"java:com.o2.webservice\">55p</n32:Value>\r\
      \n            </java:InfoBeans>\r\n         </m:TariffProductInfoStruct>\r\n\
      \      </m:getTariffProductInfoResponse>\r\n   </env:Body>\r\n</soapenv:Envelope>"
    required:
    - "Envelope"
  tariffDetailsResponse:
    description: ""
    type: "object"
    properties:
      info_message:
        type: "string"
        description: ""
        example: "Charges are per minute unless noted and they include VAT."
      tariff_details:
        type: "array"
        items:
          properties:
            item:
              type: "string"
            charge:
              type: "string"
          type: "object"
    example: "{\r\n   \"info_message\": \"Charges are per minute unless noted and\
      \ they include VAT.\",\r\n   \"tariff_details\":    [\r\n            {\r\n \
      \        \"item\": \"Mobile internet over GSM\",\r\n         \"charge\": \"\
      35p\"\r\n      },\r\n            {\r\n         \"item\": \"MMS (per message)\"\
      ,\r\n         \"charge\": \"50p\"\r\n      },\r\n            {\r\n         \"\
      item\": \"Voicemail 901 peak\",\r\n         \"charge\": \"35p\"\r\n      },\r\
      \n            {\r\n         \"item\": \"peak standard calls\",\r\n         \"\
      charge\": \"55p\"\r\n      },\r\n            {\r\n         \"item\": \"Voicemail\
      \ 901 off peak\",\r\n         \"charge\": \"35p\"\r\n      },\r\n          \
      \  {\r\n         \"item\": \"O2 to O2 peak UK\",\r\n         \"charge\": \"\
      55p\"\r\n      },\r\n            {\r\n         \"item\": \"Off-peak standard\
      \ calls\",\r\n         \"charge\": \"55p\"\r\n      },\r\n            {\r\n\
      \         \"item\": \"O2 to O2 weekend UK\",\r\n         \"charge\": \"55p\"\
      \r\n      },\r\n            {\r\n         \"item\": \"Xnet peak calls\",\r\n\
      \         \"charge\": \"55p\"\r\n      },\r\n            {\r\n         \"item\"\
      : \"Voicemail 901 weekend\",\r\n         \"charge\": \"35p\"\r\n      },\r\n\
      \            {\r\n         \"item\": \"Access charge for service numbers\",\r\
      \n         \"charge\": \"55p\"\r\n      },\r\n            {\r\n         \"item\"\
      : \"O2 to O2 off-peak UK\",\r\n         \"charge\": \"55p\"\r\n      },\r\n\
      \            {\r\n         \"item\": \"Text (per message)\",\r\n         \"\
      charge\": \"0p\"\r\n      },\r\n            {\r\n         \"item\": \"Xnet off-peak\
      \ calls\",\r\n         \"charge\": \"55p\"\r\n      },\r\n            {\r\n\
      \         \"item\": \"Xnet weekend calls\",\r\n         \"charge\": \"55p\"\r\
      \n      },\r\n            {\r\n         \"item\": \"Weekend standard calls\"\
      ,\r\n         \"charge\": \"55p\"\r\n      }\r\n   ]\r\n}"
    required:
    - "info_message"
    - "tariff_details"
    additionalProperties: false
parameters:
  msisdn:
    name: "msisdn"
    type: "integer"
    required: true
    in: "path"
    format: "int64"
  tariffname:
    name: "tariffname"
    type: "string"
    in: "query"
  productlabel:
    name: "productlabel"
    type: "string"
    in: "query"
  x-authcode:
    name: "x-authcode"
    type: "string"
    in: "header"
  x-user-id:
    name: "x-user-id"
    type: "string"
    in: "header"
  x-device:
    name: "x-device"
    type: "string"
    in: "header"
  x-correlator:
    name: "x-correlator"
    type: "string"
    in: "header"
